<controls:MetroWindow x:Class="Ciribob.DCS.SimpleRadio.Standalone.Client.UI.MainWindow"
                      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                      xmlns:clientWindow="clr-namespace:Ciribob.DCS.SimpleRadio.Standalone.Client.UI.ClientWindow"
                      xmlns:controls="clr-namespace:MahApps.Metro.Controls;assembly=MahApps.Metro"
                      xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                      xmlns:devices="clr-namespace:Ciribob.DCS.SimpleRadio.Standalone.Client"
                      xmlns:input="clr-namespace:Ciribob.DCS.SimpleRadio.Standalone.Client.Settings"
                      xmlns:local="clr-namespace:Ciribob.DCS.SimpleRadio.Standalone.Client.UI"
                      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                      xmlns:settings="clr-namespace:Ciribob.DCS.SimpleRadio.Standalone.Client.Settings"
                      xmlns:converters="clr-namespace:Ciribob.DCS.SimpleRadio.Standalone.Client.Utils.ValueConverters"
					  xmlns:p="clr-namespace:Ciribob.DCS.SimpleRadio.Standalone.Client.Properties"
                      Title="{x:Static p:Resources.ClientWindowTitle}"
                      Width="550"
                      Height="710"
                      d:DataContext="{d:DesignInstance local:MainWindow}"
                      ResizeMode="CanMinimize"
                      mc:Ignorable="d">

    <TabControl x:Name="TabControl">
        <TabControl.Resources>
            <converters:MicAvailabilityTooltipConverter x:Key="MicAvailabilityTooltipConverter" />
        </TabControl.Resources>
        <TabItem Header="{x:Static p:Resources.GeneralTab}">
            <GroupBox x:Name="GroupBox"
                      Margin="5"
                      Header="{x:Static p:Resources.SetupHeader}">
                <StackPanel Margin="0">
                    <Label x:Name="MicLabel"
                           HorizontalAlignment="Center"
                           Content="{x:Static p:Resources.MicLabel}" />
                    <ComboBox x:Name="Mic"
                              Width="250"
                              HorizontalAlignment="Center"
                              VerticalAlignment="Top"
                              ItemsSource="{Binding Path=AudioInput.InputAudioDevices}"
                              SelectedItem="{Binding Path=AudioInput.SelectedAudioInput, Mode=TwoWay}"
                              ToolTip="{Binding Path=AudioInput.MicrophoneAvailable, Converter={StaticResource MicAvailabilityTooltipConverter}}" />
                    <StackPanel Margin="0"
                                HorizontalAlignment="Center"
                                Orientation="Horizontal">
                        <ProgressBar Name="Mic_VU"
                                     Width="150"
                                     Height="20"
                                     Margin="10,10,0,0"
                                     Value="-96.6"
                                     Maximum="0"
                                     Minimum="-96.6"
                                     ToolTip="{Binding Path=AudioInput.MicrophoneAvailable, Converter={StaticResource MicAvailabilityTooltipConverter}}" />
                    </StackPanel>

                    <StackPanel Margin="0"
                                HorizontalAlignment="Center"
                                Orientation="Horizontal" />

                    <Button x:Name="Preview"
                            Margin="0,10,0,0"
                            HorizontalAlignment="Center"
                            VerticalAlignment="Top"
                            Click="PreviewAudio"
                            Content="{x:Static p:Resources.PreviewAudio}"
                            Style="{DynamicResource SquareButtonStyle}"
                            ToolTipService.ShowOnDisabled="True"
                            IsEnabled="{Binding AudioInput.MicrophoneAvailable}"
                            ToolTip="{Binding Path=AudioInput.MicrophoneAvailable, Converter={StaticResource MicAvailabilityTooltipConverter}}" />

                    <Label x:Name="SpeakerLabel"
                           HorizontalAlignment="Center"
                           Content="{x:Static p:Resources.SpeakerLabel}" />
                    <StackPanel Margin="0"
                                HorizontalAlignment="Center"
                                Orientation="Horizontal">
                        <ComboBox x:Name="Speakers"
                                  Width="200"
                                  HorizontalAlignment="Center"
                                  VerticalAlignment="Top" Margin="0,0,5,0"
                                  ItemsSource="{Binding Path=AudioOutput.OutputAudioDevices}"
                                  SelectedItem="{Binding Path=AudioOutput.SelectedAudioOutput, Mode=TwoWay}" />
                        <ComboBox x:Name="MicOutput"
                                  Width="200"
                                  HorizontalAlignment="Center"
                                  VerticalAlignment="Top" Margin="5,0,0,0"
                                  ItemsSource="{Binding Path=AudioOutput.MicOutputAudioDevices}"
                                  SelectedItem="{Binding Path=AudioOutput.SelectedMicAudioOutput, Mode=TwoWay}" />
                    </StackPanel>


                    <StackPanel Margin="0"
                                HorizontalAlignment="Center"
                                Orientation="Horizontal">

                        <Slider x:Name="SpeakerBoost"
                                Width="150"
                                Margin="0,10,0,0"
                                VerticalAlignment="Center"
                                VerticalContentAlignment="Center"
                                Maximum="1.0"
                                Minimum="0.0"
                                IsMoveToPointEnabled="true"
                                ValueChanged="SpeakerBoost_ValueChanged" />

                        <ProgressBar Name="Speaker_VU"
                                     Width="150"
                                     Height="20"
                                     Margin="10,10,0,0"
                                     Value="-96.6"
                                     Maximum="0"
                                     Minimum="-96.6" />
                    </StackPanel>

                    <StackPanel Margin="0"
                                HorizontalAlignment="Center"
                                Orientation="Horizontal">
                        <Label HorizontalAlignment="Center" Content="{x:Static p:Resources.SpeakerBoost}" />

                        <Label x:Name="SpeakerBoostLabel"
                               HorizontalAlignment="Center"
                               Content="{x:Static p:Resources.SpeakerBoostLabel}" />

                    </StackPanel>

                    <Label HorizontalAlignment="Center"
                           HorizontalContentAlignment="Center"
                           Content="{x:Static p:Resources.Server}" />

                    <StackPanel Margin="0,10,0,0"
                                HorizontalAlignment="Center"
                                Orientation="Horizontal">

                        <TextBox x:Name="ServerIp"
                                 Width="180"
                                 Height="23"
                                 Margin="0,0,5,0"
                                 MaxLines="1"
                                 Text="127.0.0.1:5002"
                                 TextWrapping="Wrap" />

                        <ComboBox x:Name="ServerAddressPicker"
                                  Width="180"
                                  Height="23"
                                  DisplayMemberPath="Name"
                                  ItemsSource="{Binding Path=FavouriteServersViewModel.Addresses}"
                                  SelectedItem="{Binding Path=ServerAddress}" />

                        <Button Height="23"
                                Margin="5,0,0,0"
                                Click="LaunchAddressTab"
                                ToolTip="Go to saved address tab">
                            <Path
                                Data="F1 M 0,13.44C 1.28003,12.69 1.92004,11.61 1.92004,10.2C 1.92004,8.94998 1.28003,7.94998 0,7.19998C 0.184998,6.56003 0.45752,5.92001 0.817505,5.28C 2.00751,5.50998 3.09753,5.12253 4.08752,4.11752C 4.95251,3.24252 5.19,2.14499 4.80005,0.824982C 5.45502,0.464996 6.09503,0.190033 6.72003,3.05176e-005C 7.55505,1.28 8.68005,1.92001 10.095,1.92001C 11.47,1.92001 12.585,1.28 13.44,3.05176e-005C 14.065,0.190033 14.705,0.464996 15.36,0.824982C 14.97,2.14499 15.2001,3.24252 16.05,4.11752C 17.04,5.12253 18.1376,5.50998 19.3425,5.28C 19.6525,5.86002 19.9401,6.50003 20.205,7.19998C 18.895,7.95499 18.24,8.95627 18.24,10.2038C 18.24,11.4513 18.895,12.4525 20.205,13.2075C 19.955,13.9025 19.6675,14.54 19.3425,15.12C 18.1525,14.77 17.0551,15.09 16.05,16.08C 15.185,17.005 14.955,18.0925 15.36,19.3425C 14.705,19.7025 14.065,19.9775 13.44,20.1675C 12.605,18.8825 11.49,18.24 10.095,18.24C 8.68005,18.24 7.55505,18.8825 6.72003,20.1675C 6.09503,19.9775 5.45502,19.7025 4.80005,19.3425C 5.19,18.0925 4.95251,17.01 4.08752,16.095C 3.22253,15.24 2.13251,14.995 0.817505,15.36C 0.45752,14.72 0.184998,14.08 0,13.44 Z M 6.97504,7.04251C 6.16504,7.89749 5.76001,8.94998 5.76001,10.2C 5.76001,11.45 6.16626,12.4625 6.97876,13.2375C 7.79126,14.0125 8.83374,14.4 10.1063,14.4C 11.3788,14.4 12.4125,14.0125 13.2075,13.2375C 14.0025,12.4625 14.4,11.45 14.4,10.2C 14.4,8.94998 14.0025,7.89749 13.2075,7.04251C 12.4125,6.18753 11.3788,5.75998 10.1063,5.75998C 8.83374,5.75998 7.79004,6.18753 6.97504,7.04251 Z "
                                Fill="Black"
                                Stretch="Uniform"
                                UseLayoutRounding="False" />
                        </Button>
                    </StackPanel>

                    <StackPanel Margin="0"
                                HorizontalAlignment="Center"
                                Orientation="Horizontal">
                        <Button x:Name="StartStop"
                                Width="125"
                                Margin="0,10,20,0"
                                HorizontalAlignment="Center"
                                Command="{Binding Path=ConnectCommand}"
                                Content="{x:Static p:Resources.StartStop}"
                                Style="{DynamicResource SquareButtonStyle}"
                                ToolTip="{Binding Path=AudioInput.MicrophoneAvailable, Converter={StaticResource MicAvailabilityTooltipConverter}}" />
                        <Button x:Name="ToggleServerSettings"
                                Width="125"
                                Margin="0,10,0,0"
                                HorizontalAlignment="Center"
                                Click="ToggleServerSettings_OnClick"
                                Content="{x:Static p:Resources.ToggleServerSettings}"
                                IsEnabled="False"
                                Style="{DynamicResource SquareButtonStyle}" />

                    </StackPanel>
                    <StackPanel Margin="0"
                                HorizontalAlignment="Center"
                                Orientation="Horizontal">
                        <Button x:Name="ShowOverlay"
                                Width="125"
                                Margin="0,15,20,0"
                                HorizontalAlignment="Center"
                                Click="ShowOverlay_OnClick"
                                Content="{x:Static p:Resources.ShowOverlay}"
                                Style="{DynamicResource SquareButtonStyle}" />
                        <Button x:Name="ShowAwacsOverlay"
                                Width="125"
                                Margin="0,15,20,0"
                                HorizontalAlignment="Center"
                                Click="ShowAwacsOverlay_OnClick"
                                Content="{x:Static p:Resources.ShowAwacsOverlay}"
                                Style="{DynamicResource SquareButtonStyle}" />
                        <Button x:Name="ShowClientList"
                                Width="125"
                                Margin="0,15,0,0"
                                HorizontalAlignment="Center"
                                Click="ShowClientList_OnClick"
                                Content="{x:Static p:Resources.ShowClientList}"
                                Style="{DynamicResource SquareButtonStyle}" />
                    </StackPanel>

                    <StackPanel Margin="0"
                                HorizontalAlignment="Center"
                                Orientation="Horizontal">
                        <StackPanel.Resources>
                            <converters:BooleanInverterConverter x:Key="BooleanInverterConverter" />
                        </StackPanel.Resources>
                        <StackPanel Margin="0"
                                    HorizontalAlignment="Center"
                                    Orientation="Vertical">
                            <Label x:Name="ExternalAWACSModePasswordLabel"
                                   HorizontalAlignment="Center"
                                   HorizontalContentAlignment="Center"
                                   Margin="0,10,10,0"
                                   Content="{x:Static p:Resources.ExternalAWACSModePasswordLabel}"
                                   IsEnabled="{Binding Path=ClientState.ExternalAWACSModeConnected, Converter={StaticResource BooleanInverterConverter}}" />
                            <PasswordBox x:Name="ExternalAWACSModePassword"
                                         Width="200"
                                         Height="23"
                                         Margin="0,0,10,0"
                                         HorizontalAlignment="Center"
                                         IsEnabled="{Binding Path=ClientState.ExternalAWACSModeConnected, Converter={StaticResource BooleanInverterConverter}}" />
                        </StackPanel>
                        <StackPanel Margin="0"
                                    HorizontalAlignment="Center"
                                    Orientation="Vertical">
                            <Label x:Name="ExternalAWACSModeNameLabel"
                                   HorizontalAlignment="Center"
                                   HorizontalContentAlignment="Center"
                                   Margin="0,10,0,0"
                                   Content="{x:Static p:Resources.ExternalAWACSModeNameLabel}"
                                   IsEnabled="{Binding Path=ClientState.ExternalAWACSModeConnected, Converter={StaticResource BooleanInverterConverter}}" />
                            <TextBox x:Name="ExternalAWACSModeName"
                                     Width="200"
                                     Height="23"
                                     Margin="0,0,0,0"
                                     MaxLines="1"
                                     TextWrapping="Wrap"
                                     HorizontalAlignment="Center"
                                     IsEnabled="{Binding Path=ClientState.ExternalAWACSModeConnected, Converter={StaticResource BooleanInverterConverter}}" />
                        </StackPanel>
                    </StackPanel>
                    <StackPanel Margin="0"
                                HorizontalAlignment="Center"
                                Orientation="Horizontal">
                        <Button x:Name="ConnectExternalAWACSMode"
                                Width="220"
                                Margin="0,10,0,0"
                                HorizontalAlignment="Center"
                                Click="ConnectExternalAWACSMode_OnClick"
                                Content="{x:Static p:Resources.ConnectExternalAWACSMode}"
                                IsEnabled="False"
                                Style="{DynamicResource SquareButtonStyle}" />
                    </StackPanel>

                    <StackPanel HorizontalAlignment="Center" Orientation="Horizontal" Margin="0,0,0,0">
                        <Label Content="{x:Static p:Resources.CurrentProfile}" />
                        <Label Name="CurrentProfile" Content="{x:Static p:Resources.CurrentProfileNone}" />
                    </StackPanel>
                    <StackPanel Margin="0"
                                HorizontalAlignment="Center"
                                Orientation="Horizontal">
                        <Label HorizontalAlignment="Center" Content="{x:Static p:Resources.ConnectedClientsLabel}" />
                        <Label x:Name="ClientCount"
                               HorizontalAlignment="Center">
                            <Label.Content>
                                <TextBlock> <!-- https://stackoverflow.com/questions/4399178/stringformat-and-multibinding-with-label -->
                                    <TextBlock.Text>
                                        <MultiBinding StringFormat=" {0}">
                                            <Binding Path="Clients.Total" />
                                        </MultiBinding>
                                    </TextBlock.Text>
                                </TextBlock>
                            </Label.Content>
                        </Label>
                        <Label Content="{x:Static p:Resources.CurrentPositionLabel}" />
                        <Label>
                            <TextBlock Name="CurrentPosition" Text="0,0 - Alt:0"
                                       MouseLeftButtonUp="CurrentPosition_OnClick" />
                        </Label>
                    </StackPanel>

                    <StackPanel Margin="0"
                                HorizontalAlignment="Center"
                                Orientation="Horizontal">
                        <StackPanel.Resources>
                            <converters:ConnectionStatusImageConverter x:Key="ConnectionStatusImageConverter" />
                        </StackPanel.Resources>
                        <Label HorizontalAlignment="Center" HorizontalContentAlignment="Center" Content="{x:Static p:Resources.ServerConnectionStatusLabel}" />
                        <Image x:Name="ServerConnectionStatus"
                               Source="{Binding Path=ClientState.IsConnected, Converter={StaticResource ConnectionStatusImageConverter}}"
                               HorizontalAlignment="Center"
                               Height="26"
                               Margin="5,0,5,0" />
                        <Label HorizontalAlignment="Center" HorizontalContentAlignment="Center" Content="{x:Static p:Resources.VOIPConnectionStatusLabel}" />
                        <Image x:Name="VOIPConnectionStatus"
                               Source="{Binding Path=ClientState.IsVoipConnected, Converter={StaticResource ConnectionStatusImageConverter}}"
                               Height="26"
                               HorizontalAlignment="Center"
                               Margin="5,0,5,0" />
                        <Label HorizontalAlignment="Center" HorizontalContentAlignment="Center" Content="{x:Static p:Resources.GameConnectionStatusLabel}" />
                        <Image x:Name="GameConnectionStatus"
                               Source="{Binding Path=ClientState.IsGameConnected, Converter={StaticResource ConnectionStatusImageConverter}}"
                               Height="26"
                               HorizontalAlignment="Center"
                               Margin="5,0,5,0" />
                        <Label HorizontalAlignment="Center" HorizontalContentAlignment="Center" Content="{x:Static p:Resources.LotATCConnectionStatusLabel}" />
                        <Image x:Name="LotATCConnectionStatus"
                               Source="{Binding Path=ClientState.IsLotATCConnected, Converter={StaticResource ConnectionStatusImageConverter}}"
                               Height="26"
                               HorizontalAlignment="Center"
                               Margin="5,0,0,0" />

                    </StackPanel>

                    <Button Content="{x:Static p:Resources.Donate_OnClick}"
                            Click="Donate_OnClick"
                            Width="220"
                            Margin="0,5,0,0" controls:ButtonHelper.PreserveTextCase="True"
                            Style="{StaticResource AccentedSquareButtonStyle}" />

                </StackPanel>
            </GroupBox>
        </TabItem>

        <TabItem Header="{x:Static p:Resources.ControlsTab}">
            <GroupBox x:Name="ControlsGroupBox" Header="{x:Static p:Resources.ControlsHeader}">

                <ScrollViewer HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Visible">
                    <StackPanel>
                        <Button Width="150px" Content="{x:Static p:Resources.RescanInputDevices}" Click="RescanInputDevices" />
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="2*" />
                                <ColumnDefinition Width="2*" />
                                <ColumnDefinition Width="1*" />
                                <ColumnDefinition Width="1*" />
                                <ColumnDefinition Width="1*" />
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition />
                                <RowDefinition />
                                <RowDefinition />
                                <RowDefinition />
                                <RowDefinition />
                                <RowDefinition />
                                <RowDefinition />
                                <RowDefinition />
                                <RowDefinition />
                                <RowDefinition />
                                <RowDefinition />
                                <RowDefinition />
                                <RowDefinition />
                                <RowDefinition />
                                <RowDefinition />
                                <RowDefinition />
                                <RowDefinition />
                                <RowDefinition />
                                <RowDefinition />
                                <RowDefinition />
                                <RowDefinition />
                                <RowDefinition />
                                <RowDefinition />
                                <RowDefinition />
                                <RowDefinition />
                                <RowDefinition />
                                <RowDefinition />
                                <RowDefinition />
                                <RowDefinition />
                                <RowDefinition />
                                <RowDefinition />
                                <RowDefinition />
                                <RowDefinition />
                                <RowDefinition />
                                <RowDefinition />
                                <RowDefinition />
                                <RowDefinition />
                                <RowDefinition />
                                <RowDefinition />
                            </Grid.RowDefinitions>


                            <Label x:Name="DeviceLabel"
                                   Grid.Row="0"
                                   Grid.Column="1"
                                   HorizontalContentAlignment="Center"
                                   VerticalContentAlignment="Center"
                                   Content="{x:Static p:Resources.DeviceLabel}" />
                            <Label x:Name="ButtonLabel"
                                   Grid.Row="0"
                                   Grid.Column="2"
                                   HorizontalContentAlignment="Center"
                                   VerticalContentAlignment="Center"
                                   Content="{x:Static p:Resources.ButtonLabel}" />

                            <local:InputBindingControl x:Name="Radio1"
                                                       Grid.Row="1"
                                                       Grid.ColumnSpan="5"
                                                       ControlInputBinding="{x:Static settings:InputBinding.Switch1}"
                                                       InputName="Radio 1" />
                            <local:InputBindingControl x:Name="Radio2"
                                                       Grid.Row="2"
                                                       Grid.ColumnSpan="5"
                                                       ControlInputBinding="{x:Static settings:InputBinding.Switch2}"
                                                       InputName="Radio 2" />
                            <local:InputBindingControl x:Name="Radio3"
                                                       Grid.Row="3"
                                                       Grid.ColumnSpan="5"
                                                       ControlInputBinding="{x:Static settings:InputBinding.Switch3}"
                                                       InputName="Radio 3" />
                            <local:InputBindingControl x:Name="PTT"
                                                       Grid.Row="4"
                                                       Grid.ColumnSpan="5"
                                                       ControlInputBinding="{x:Static settings:InputBinding.Ptt}"
                                                       InputName="Common PTT" />
                            <local:InputBindingControl x:Name="Intercom"
                                                       Grid.Row="5"
                                                       Grid.ColumnSpan="5"
                                                       ControlInputBinding="{x:Static settings:InputBinding.Intercom}"
                                                       InputName="Intercom Select" />

                            <local:InputBindingControl x:Name="IntercomPTT"
                                                       Grid.Row="6"
                                                       Grid.ColumnSpan="5"
                                                       ControlInputBinding="{x:Static settings:InputBinding.IntercomPTT}"
                                                       InputName="Special Intercom Select &amp; PTT" />

                            <local:InputBindingControl x:Name="RadioOverlay"
                                                       Grid.Row="7"
                                                       Grid.ColumnSpan="6"
                                                       ControlInputBinding="{x:Static settings:InputBinding.OverlayToggle}"
                                                       InputName="Overlay Toggle" />

                            <local:InputBindingControl x:Name="Radio4"
                                                       Grid.Row="8"
                                                       Grid.ColumnSpan="5"
                                                       ControlInputBinding="{x:Static settings:InputBinding.Switch4}"
                                                       InputName="Radio 4" />
                            <local:InputBindingControl x:Name="Radio5"
                                                       Grid.Row="9"
                                                       Grid.ColumnSpan="5"
                                                       ControlInputBinding="{x:Static settings:InputBinding.Switch5}"
                                                       InputName="Radio 5" />
                            <local:InputBindingControl x:Name="Radio6"
                                                       Grid.Row="10"
                                                       Grid.ColumnSpan="5"
                                                       ControlInputBinding="{x:Static settings:InputBinding.Switch6}"
                                                       InputName="Radio 6" />

                            <local:InputBindingControl x:Name="Radio7"
                                                       Grid.Row="11"
                                                       Grid.ColumnSpan="5"
                                                       ControlInputBinding="{x:Static settings:InputBinding.Switch7}"
                                                       InputName="Radio 7" />

                            <local:InputBindingControl x:Name="Radio8"
                                                       Grid.Row="12"
                                                       Grid.ColumnSpan="5"
                                                       ControlInputBinding="{x:Static settings:InputBinding.Switch8}"
                                                       InputName="Radio 8" />

                            <local:InputBindingControl x:Name="Radio9"
                                                       Grid.Row="13"
                                                       Grid.ColumnSpan="5"
                                                       ControlInputBinding="{x:Static settings:InputBinding.Switch9}"
                                                       InputName="Radio 9" />

                            <local:InputBindingControl x:Name="Radio10"
                                                       Grid.Row="14"
                                                       Grid.ColumnSpan="5"
                                                       ControlInputBinding="{x:Static settings:InputBinding.Switch10}"
                                                       InputName="Radio 10" />


                            <local:InputBindingControl x:Name="Up100"
                                                       Grid.Row="15"
                                                       Grid.ColumnSpan="5"
                                                       ControlInputBinding="{x:Static settings:InputBinding.Up100}"
                                                       InputName="Up 100MHz" />

                            <local:InputBindingControl x:Name="Up10"
                                                       Grid.Row="16"
                                                       Grid.ColumnSpan="5"
                                                       ControlInputBinding="{x:Static settings:InputBinding.Up10}"
                                                       InputName="Up 10MHz" />

                            <local:InputBindingControl x:Name="Up1"
                                                       Grid.Row="17"
                                                       Grid.ColumnSpan="5"
                                                       ControlInputBinding="{x:Static settings:InputBinding.Up1}"
                                                       InputName="Up 1MHz" />

                            <local:InputBindingControl x:Name="Up01"
                                                       Grid.Row="18"
                                                       Grid.ColumnSpan="5"
                                                       ControlInputBinding="{x:Static settings:InputBinding.Up01}"
                                                       InputName="Up 0.1MHz" />

                            <local:InputBindingControl x:Name="Up001"
                                                       Grid.Row="19"
                                                       Grid.ColumnSpan="5"
                                                       ControlInputBinding="{x:Static settings:InputBinding.Up001}"
                                                       InputName="Up 0.01MHz" />

                            <local:InputBindingControl x:Name="Up0001"
                                                       Grid.Row="20"
                                                       Grid.ColumnSpan="5"
                                                       ControlInputBinding="{x:Static settings:InputBinding.Up0001}"
                                                       InputName="Up 0.001MHz" />


                            <local:InputBindingControl x:Name="Down100"
                                                       Grid.Row="21"
                                                       Grid.ColumnSpan="5"
                                                       ControlInputBinding="{x:Static settings:InputBinding.Down100}"
                                                       InputName="Down 100MHz" />

                            <local:InputBindingControl x:Name="Down10"
                                                       Grid.Row="22"
                                                       Grid.ColumnSpan="5"
                                                       ControlInputBinding="{x:Static settings:InputBinding.Down10}"
                                                       InputName="Down 10MHz" />

                            <local:InputBindingControl x:Name="Down1"
                                                       Grid.Row="23"
                                                       Grid.ColumnSpan="5"
                                                       ControlInputBinding="{x:Static settings:InputBinding.Down1}"
                                                       InputName="Down 1MHz" />

                            <local:InputBindingControl x:Name="Down01"
                                                       Grid.Row="24"
                                                       Grid.ColumnSpan="5"
                                                       ControlInputBinding="{x:Static settings:InputBinding.Down01}"
                                                       InputName="Down 0.1MHz" />

                            <local:InputBindingControl x:Name="Down001"
                                                       Grid.Row="25"
                                                       Grid.ColumnSpan="5"
                                                       ControlInputBinding="{x:Static settings:InputBinding.Down001}"
                                                       InputName="Down 0.01MHz" />

                            <local:InputBindingControl x:Name="Down0001"
                                                       Grid.Row="26"
                                                       Grid.ColumnSpan="5"
                                                       ControlInputBinding="{x:Static settings:InputBinding.Down0001}"
                                                       InputName="Down 0.001MHz" />

                            <local:InputBindingControl x:Name="ToggleGuard"
                                                       Grid.Row="27"
                                                       Grid.ColumnSpan="5"
                                                       ControlInputBinding="{x:Static settings:InputBinding.ToggleGuard}"
                                                       InputName="Toggle Guard" />

                            <local:InputBindingControl x:Name="NextRadio"
                                                       Grid.Row="28"
                                                       Grid.ColumnSpan="5"
                                                       ControlInputBinding="{x:Static settings:InputBinding.NextRadio}"
                                                       InputName="Next Radio" />


                            <local:InputBindingControl x:Name="PreviousRadio"
                                                       Grid.Row="29"
                                                       Grid.ColumnSpan="5"
                                                       ControlInputBinding="{x:Static settings:InputBinding.PreviousRadio}"
                                                       InputName="Previous Radio" />

                            <local:InputBindingControl x:Name="ToggleEncryption"
                                                       Grid.Row="30"
                                                       Grid.ColumnSpan="5"
                                                       ControlInputBinding="{x:Static settings:InputBinding.ToggleEncryption}"
                                                       InputName="Toggle Encryption" />

                            <local:InputBindingControl x:Name="EncryptionKeyIncrease"
                                                       Grid.Row="31"
                                                       Grid.ColumnSpan="5"
                                                       ControlInputBinding="{x:Static settings:InputBinding.EncryptionKeyIncrease}"
                                                       InputName="Encryption Key Increase" />

                            <local:InputBindingControl x:Name="EncryptionKeyDecrease"
                                                       Grid.Row="32"
                                                       Grid.ColumnSpan="5"
                                                       ControlInputBinding="{x:Static settings:InputBinding.EncryptionKeyDecrease}"
                                                       InputName="Encryption Key Decrease" />

                            <local:InputBindingControl x:Name="RadioChannelUp"
                                                       Grid.Row="33"
                                                       Grid.ColumnSpan="5"
                                                       ControlInputBinding="{x:Static settings:InputBinding.RadioChannelUp}"
                                                       InputName="Radio Channel Up" />

                            <local:InputBindingControl x:Name="RadioChannelDown"
                                                       Grid.Row="34"
                                                       Grid.ColumnSpan="5"
                                                       ControlInputBinding="{x:Static settings:InputBinding.RadioChannelDown}"
                                                       InputName="Radio Channel Down" />

                            <local:InputBindingControl x:Name="TransponderIDENT"
                                                       Grid.Row="35"
                                                       Grid.ColumnSpan="5"
                                                       ControlInputBinding="{x:Static settings:InputBinding.TransponderIDENT}"
                                                       InputName="Transponder IDENT" />

                            <local:InputBindingControl x:Name="RadioVolumeUp"
                                                       Grid.Row="36"
                                                       Grid.ColumnSpan="5"
                                                       ControlInputBinding="{x:Static settings:InputBinding.RadioVolumeUp}"
                                                       InputName="Radio Volume Up" />

                            <local:InputBindingControl x:Name="RadioVolumeDown"
                                                       Grid.Row="37"
                                                       Grid.ColumnSpan="5"
                                                       ControlInputBinding="{x:Static settings:InputBinding.RadioVolumeDown}"
                                                       InputName="Radio Volume Down" />

                            <local:InputBindingControl x:Name="AwacsOverlayToggle"
                                                           Grid.Row="38"
                                                           Grid.ColumnSpan="5"
                                                           ControlInputBinding="{x:Static settings:InputBinding.AwacsOverlayToggle}"
                                                           InputName="AWACS Overlay Toggle" />


                        </Grid>

                    </StackPanel>
                </ScrollViewer>

            </GroupBox>

        </TabItem>

        <TabItem x:Name="FavouritesSeversTab" Header="{x:Static p:Resources.FavouritesSeversTab}">
            <GroupBox Header="{x:Static p:Resources.FavouritesSeversHeader}">
                <clientWindow:FavouriteServersView DataContext="{Binding Path=FavouriteServersViewModel}" />
            </GroupBox>
        </TabItem>

        <TabItem Header="{x:Static p:Resources.SettingsTab}">
            <ScrollViewer HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Visible">
                <StackPanel>
                    <GroupBox Header="{x:Static p:Resources.GlobalSettingsHeader}">
                        <StackPanel>
                            <GroupBox Header="{x:Static p:Resources.AutoConnectHeader}">
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="2*" />
                                        <ColumnDefinition Width="2*" />

                                    </Grid.ColumnDefinitions>
                                    <Grid.RowDefinitions>
                                        <RowDefinition />
                                        <RowDefinition />
                                        <RowDefinition />
                                        <RowDefinition />

                                    </Grid.RowDefinitions>
                                    <Label Grid.Row="0"
                                   Grid.Column="0"
                                   HorizontalContentAlignment="Center"
                                   VerticalContentAlignment="Center"
                                   Content="{x:Static p:Resources.AutoConnectEnabled}" />

                                    <ToggleButton Name="AutoConnectEnabledToggle"
                                          Grid.Row="0"
                                          Grid.Column="1"
                                          HorizontalContentAlignment="Center"
                                          VerticalContentAlignment="Center"
                                          Click="AutoConnectToggle_Click">
                                        <ToggleButton.Style>
                                            <Style TargetType="{x:Type ToggleButton}">
                                                <Setter Property="Content" Value="{x:Static p:Resources.ValueON}" />
                                                <Style.Triggers>
                                                    <Trigger Property="IsChecked" Value="True">
                                                        <Setter Property="Content" Value="{x:Static p:Resources.ValueON}" />
                                                    </Trigger>
                                                    <Trigger Property="IsChecked" Value="False">
                                                        <Setter Property="Content" Value="{x:Static p:Resources.ValueOFF}" />
                                                    </Trigger>
                                                </Style.Triggers>
                                            </Style>
                                        </ToggleButton.Style>
                                    </ToggleButton>

                                    <Label Grid.Row="1"
                                   Grid.Column="0"
                                   HorizontalContentAlignment="Center"
                                   VerticalContentAlignment="Center"
                                   Content="{x:Static p:Resources.AutoConnectPrompt}" />

                                    <ToggleButton Name="AutoConnectPromptToggle"
                                          Grid.Row="1"
                                          Grid.Column="1"
                                          HorizontalContentAlignment="Center"
                                          VerticalContentAlignment="Center"
                                          Click="AutoConnectPromptToggle_Click">
                                        <ToggleButton.Style>
                                            <Style TargetType="{x:Type ToggleButton}">
                                                <Setter Property="Content" Value="{x:Static p:Resources.ValueON}" />
                                                <Style.Triggers>
                                                    <Trigger Property="IsChecked" Value="True">
                                                        <Setter Property="Content" Value="{x:Static p:Resources.ValueON}" />
                                                    </Trigger>
                                                    <Trigger Property="IsChecked" Value="False">
                                                        <Setter Property="Content" Value="{x:Static p:Resources.ValueOFF}" />
                                                    </Trigger>
                                                </Style.Triggers>
                                            </Style>
                                        </ToggleButton.Style>
                                    </ToggleButton>


                                    <Label Grid.Row="2"
                                   Grid.Column="0"
                                   HorizontalContentAlignment="Center"
                                   VerticalContentAlignment="Center"
                                   Content="{x:Static p:Resources.AutoConnectMismatchPrompt}" />

                                    <ToggleButton Name="AutoConnectMismatchPromptToggle"
                                          Grid.Row="2"
                                          Grid.Column="1"
                                          HorizontalContentAlignment="Center"
                                          VerticalContentAlignment="Center"
                                          Click="AutoConnectMismatchPromptToggle_Click">
                                        <ToggleButton.Style>
                                            <Style TargetType="{x:Type ToggleButton}">
                                                <Setter Property="Content" Value="{x:Static p:Resources.ValueON}" />
                                                <Style.Triggers>
                                                    <Trigger Property="IsChecked" Value="True">
                                                        <Setter Property="Content" Value="{x:Static p:Resources.ValueON}" />
                                                    </Trigger>
                                                    <Trigger Property="IsChecked" Value="False">
                                                        <Setter Property="Content" Value="{x:Static p:Resources.ValueOFF}" />
                                                    </Trigger>
                                                </Style.Triggers>
                                            </Style>
                                        </ToggleButton.Style>
                                    </ToggleButton>
                                </Grid>
                            </GroupBox>
                            <GroupBox Header="{x:Static p:Resources.SRSInterfaceHeader}">
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="2*" />
                                        <ColumnDefinition Width="2*" />

                                    </Grid.ColumnDefinitions>
                                    <Grid.RowDefinitions>
                                        <RowDefinition />
                                        <RowDefinition />
                                        <RowDefinition />
                                        <RowDefinition />
                                        <RowDefinition />
                                        <RowDefinition />

                                    </Grid.RowDefinitions>
                                    <Label Grid.Row="0"
                                   Grid.Column="0"
                                   HorizontalContentAlignment="Center"
                                   VerticalContentAlignment="Center"
                                   Content="{x:Static p:Resources.ResetRadioOverlay}" />

                                    <Button Grid.Row="0"
                                    Grid.Column="1"
                                    HorizontalContentAlignment="Center"
                                    VerticalContentAlignment="Center"
                                    Click="ResetRadioWindow_Click"
                                    Content="{x:Static p:Resources.Reset}" />


                                    <Label Grid.Row="1"
                                   Grid.Column="0"
                                   HorizontalContentAlignment="Center"
                                   VerticalContentAlignment="Center"
                                   Content="{x:Static p:Resources.RadioOverlayTaskbarItem}" />

                                    <ToggleButton Name="RadioOverlayTaskbarItem"
                                          Grid.Row="1"
                                          Grid.Column="1"
                                          HorizontalContentAlignment="Center"
                                          VerticalContentAlignment="Center"
                                          Click="RadioOverlayTaskbarItem_Click">
                                        <ToggleButton.Style>
                                            <Style TargetType="{x:Type ToggleButton}">
                                                <Setter Property="Content" Value="{x:Static p:Resources.ValueON}" />
                                                <Style.Triggers>
                                                    <Trigger Property="IsChecked" Value="True">
                                                        <Setter Property="Content" Value="{x:Static p:Resources.ValueON}" />
                                                    </Trigger>
                                                    <Trigger Property="IsChecked" Value="False">
                                                        <Setter Property="Content" Value="{x:Static p:Resources.ValueOFF}" />
                                                    </Trigger>
                                                </Style.Triggers>
                                            </Style>
                                        </ToggleButton.Style>
                                    </ToggleButton>

                                    <Label Grid.Row="2"
                                           Grid.Column="0"
                                           HorizontalContentAlignment="Center"
                                           VerticalContentAlignment="Center"
                                           Content="{x:Static p:Resources.RefocusDCS}" />

                                    <ToggleButton Name="RefocusDCS"
                                                  Grid.Row="2"
                                                  Grid.Column="1"
                                                  HorizontalContentAlignment="Center"
                                                  VerticalContentAlignment="Center"
                                                  Click="DCSRefocus_OnClick_Click">
                                        <ToggleButton.Style>
                                            <Style TargetType="{x:Type ToggleButton}">
                                                <Setter Property="Content" Value="{x:Static p:Resources.ValueON}" />
                                                <Style.Triggers>
                                                    <Trigger Property="IsChecked" Value="True">
                                                        <Setter Property="Content" Value="{x:Static p:Resources.ValueON}" />
                                                    </Trigger>
                                                    <Trigger Property="IsChecked" Value="False">
                                                        <Setter Property="Content" Value="{x:Static p:Resources.ValueOFF}" />
                                                    </Trigger>
                                                </Style.Triggers>
                                            </Style>
                                        </ToggleButton.Style>
                                    </ToggleButton>

                                    <Label Grid.Row="3"
                                   Grid.Column="0"
                                   HorizontalContentAlignment="Center"
                                   VerticalContentAlignment="Center"
                                   Content="{x:Static p:Resources.Minimisetotray}" />

                                    <ToggleButton Name="MinimiseToTray"
                                          Grid.Row="3"
                                          Grid.Column="1"
                                          HorizontalContentAlignment="Center"
                                          VerticalContentAlignment="Center"
                                          Click="MinimiseToTray_OnClick">
                                        <ToggleButton.Style>
                                            <Style TargetType="{x:Type ToggleButton}">
                                                <Setter Property="Content" Value="{x:Static p:Resources.ValueON}" />
                                                <Style.Triggers>
                                                    <Trigger Property="IsChecked" Value="True">
                                                        <Setter Property="Content" Value="{x:Static p:Resources.ValueON}" />
                                                    </Trigger>
                                                    <Trigger Property="IsChecked" Value="False">
                                                        <Setter Property="Content" Value="{x:Static p:Resources.ValueOFF}" />
                                                    </Trigger>
                                                </Style.Triggers>
                                            </Style>
                                        </ToggleButton.Style>
                                    </ToggleButton>

                                    <Label Grid.Row="4"
                                   Grid.Column="0"
                                   HorizontalContentAlignment="Center"
                                   VerticalContentAlignment="Center"
                                   Content="{x:Static p:Resources.Startminimised}" />

                                    <ToggleButton Name="StartMinimised"
                                          Grid.Row="4"
                                          Grid.Column="1"
                                          HorizontalContentAlignment="Center"
                                          VerticalContentAlignment="Center"
                                          Click="StartMinimised_OnClick">
                                        <ToggleButton.Style>
                                            <Style TargetType="{x:Type ToggleButton}">
                                                <Setter Property="Content" Value="{x:Static p:Resources.ValueON}" />
                                                <Style.Triggers>
                                                    <Trigger Property="IsChecked" Value="True">
                                                        <Setter Property="Content" Value="{x:Static p:Resources.ValueON}" />
                                                    </Trigger>
                                                    <Trigger Property="IsChecked" Value="False">
                                                        <Setter Property="Content" Value="{x:Static p:Resources.ValueOFF}" />
                                                    </Trigger>
                                                </Style.Triggers>
                                            </Style>
                                        </ToggleButton.Style>
                                    </ToggleButton>

                                    <Label Grid.Row="5"
                                           Grid.Column="0"
                                           HorizontalContentAlignment="Center"
                                           VerticalContentAlignment="Center"
                                           Content="{x:Static p:Resources.ShowTransmitterName}" />

                                    <ToggleButton Name="ShowTransmitterName"
                                                  Grid.Row="5"
                                                  Grid.Column="1"
                                                  HorizontalContentAlignment="Center"
                                                  VerticalContentAlignment="Center"
                                                  Click="ShowTransmitterName_OnClick_OnClick">
                                        <ToggleButton.Style>
                                            <Style TargetType="{x:Type ToggleButton}">
                                                <Setter Property="Content" Value="{x:Static p:Resources.ValueON}" />
                                                <Style.Triggers>
                                                    <Trigger Property="IsChecked" Value="True">
                                                        <Setter Property="Content" Value="{x:Static p:Resources.ValueON}" />
                                                    </Trigger>
                                                    <Trigger Property="IsChecked" Value="False">
                                                        <Setter Property="Content" Value="{x:Static p:Resources.ValueOFF}" />
                                                    </Trigger>
                                                </Style.Triggers>
                                            </Style>
                                        </ToggleButton.Style>
                                    </ToggleButton>
                                </Grid>
                            </GroupBox>

                            <GroupBox Header="{x:Static p:Resources.MicrophoneHeader}">
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="2*" />
                                        <ColumnDefinition Width="2*" />

                                    </Grid.ColumnDefinitions>
                                    <Grid.RowDefinitions>
                                        <RowDefinition />
                                        <RowDefinition />
                                        <RowDefinition />
                                        <RowDefinition />
                                        <RowDefinition />
                                        <RowDefinition />
                                        <RowDefinition />

                                    </Grid.RowDefinitions>

                                    <Label Grid.Row="1"
                                   Grid.Column="0"
                                   HorizontalContentAlignment="Center"
                                   VerticalContentAlignment="Center"
                                   Content="{x:Static p:Resources.MicAGC}" />

                                    <ToggleButton Name="MicAGC"
                                          Grid.Row="1"
                                          Grid.Column="1"
                                          HorizontalContentAlignment="Center"
                                          VerticalContentAlignment="Center"
                                          Click="MicAGC_OnClick">
                                        <ToggleButton.Style>
                                            <Style TargetType="{x:Type ToggleButton}">
                                                <Setter Property="Content" Value="{x:Static p:Resources.ValueON}" />
                                                <Style.Triggers>
                                                    <Trigger Property="IsChecked" Value="True">
                                                        <Setter Property="Content" Value="{x:Static p:Resources.ValueON}" />
                                                    </Trigger>
                                                    <Trigger Property="IsChecked" Value="False">
                                                        <Setter Property="Content" Value="{x:Static p:Resources.ValueOFF}" />
                                                    </Trigger>
                                                </Style.Triggers>
                                            </Style>
                                        </ToggleButton.Style>
                                    </ToggleButton>


                                    <Label Grid.Row="2"
                                   Grid.Column="0"
                                   HorizontalContentAlignment="Center"
                                   VerticalContentAlignment="Center"
                                   Content="{x:Static p:Resources.MicDenoise}" />

                                    <ToggleButton Name="MicDenoise"
                                          Grid.Row="2"
                                          Grid.Column="1"
                                          HorizontalContentAlignment="Center"
                                          VerticalContentAlignment="Center"
                                          Click="MicDenoise_OnClick">
                                        <ToggleButton.Style>
                                            <Style TargetType="{x:Type ToggleButton}">
                                                <Setter Property="Content" Value="{x:Static p:Resources.ValueON}" />
                                                <Style.Triggers>
                                                    <Trigger Property="IsChecked" Value="True">
                                                        <Setter Property="Content" Value="{x:Static p:Resources.ValueON}" />
                                                    </Trigger>
                                                    <Trigger Property="IsChecked" Value="False">
                                                        <Setter Property="Content" Value="{x:Static p:Resources.ValueOFF}" />
                                                    </Trigger>
                                                </Style.Triggers>
                                            </Style>
                                        </ToggleButton.Style>
                                    </ToggleButton>



                                </Grid>
                            </GroupBox>

                            <GroupBox Header="{x:Static p:Resources.VOXHeader}">
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="2*" />
                                        <ColumnDefinition Width="2*" />

                                    </Grid.ColumnDefinitions>
                                    <Grid.RowDefinitions>
                                        <RowDefinition />
                                        <RowDefinition />
                                        <RowDefinition />
                                        <RowDefinition />

                                    </Grid.RowDefinitions>

                                    <Label Grid.Row="0"
                                           Grid.Column="0"
                                           HorizontalContentAlignment="Center"
                                           VerticalContentAlignment="Center"
                                           Content="{x:Static p:Resources.VOXEnabled}" />

                                    <ToggleButton Name="VOXEnabled"
                                          Grid.Row="0"
                                          Grid.Column="1"
                                          HorizontalContentAlignment="Center"
                                          VerticalContentAlignment="Center"
                                          Click="VoxEnabled_OnClick"
                                          ToolTip="Enables Voice Detection if Hot Mic on intercom is used"
                                          ToolTipService.ShowOnDisabled="True"
                                          >
                                        <ToggleButton.Style>
                                            <Style TargetType="{x:Type ToggleButton}">
                                                <Setter Property="Content" Value="{x:Static p:Resources.ValueON}" />
                                                <Style.Triggers>
                                                    <Trigger Property="IsChecked" Value="True">
                                                        <Setter Property="Content" Value="{x:Static p:Resources.ValueON}" />
                                                    </Trigger>
                                                    <Trigger Property="IsChecked" Value="False">
                                                        <Setter Property="Content" Value="{x:Static p:Resources.ValueOFF}" />
                                                    </Trigger>
                                                </Style.Triggers>
                                            </Style>
                                        </ToggleButton.Style>
                                    </ToggleButton>

                                    <Label Grid.Row="1"
                                           Grid.Column="0"
                                           HorizontalContentAlignment="Center"
                                           VerticalContentAlignment="Center"
                                           Content="{x:Static p:Resources.VOXMinimimumTXTime}" />

                                    <StackPanel Grid.Row="1"
                                                Grid.Column="1" Margin="10">

                                        <Slider x:Name="VOXMinimimumTXTime"
                                                TickPlacement="BottomRight"
                                                SmallChange="100"
                                                LargeChange="200"
                                                IsSnapToTickEnabled="True"
                                                TickFrequency="100"
                                                VerticalAlignment="Center"
                                                VerticalContentAlignment="Center"
                                                Maximum="2000"
                                                Value="500"
                                                Minimum="0"
                                                IsEnabled="False" />
                                        <Grid>
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="*" />
                                                <ColumnDefinition Width="*" />
                                                <ColumnDefinition Width="*" />
                                            </Grid.ColumnDefinitions>
                                            <Label Grid.Column="0" FontSize="10" Content="{x:Static p:Resources.VOXMinimimumTXTime0}" HorizontalAlignment="Left" />
                                            <Label Grid.Column="1" FontSize="10" Content="{x:Static p:Resources.VOXMinimimumTXTime1000}" HorizontalAlignment="Center" />
                                            <Label Grid.Column="2" FontSize="10" Content="{x:Static p:Resources.VOXMinimimumTXTime2000}"
                                                   HorizontalAlignment="Right" />
                                        </Grid>
                                    </StackPanel>

                                    <Label Grid.Row="2"
                                           Grid.Column="0"
                                           HorizontalContentAlignment="Center"
                                           VerticalContentAlignment="Center"
                                           Content="{x:Static p:Resources.VOXMode}" />

                                    <StackPanel Grid.Row="2"
                                                Grid.Column="1" Margin="10">

                                        <Slider x:Name="VOXMode"
                                                TickPlacement="BottomRight"
                                                SmallChange="1"
                                                LargeChange="1"
                                                IsSnapToTickEnabled="True"
                                                TickFrequency="1"
                                                VerticalAlignment="Center"
                                                VerticalContentAlignment="Center"
                                                Maximum="3"
                                                Value="0"
                                                Minimum="0"
                                                ToolTip="The higher the sensitivity the less likely voice will be missed, but the higher the chance of a false positive "
                                                IsEnabled="False" />
                                        <Grid>
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="*" />
                                                <ColumnDefinition Width="*" />
                                                <ColumnDefinition Width="*" />
                                                <ColumnDefinition Width="*" />
                                            </Grid.ColumnDefinitions>
                                            <Label Grid.Column="0" FontSize="10" Content="{x:Static p:Resources.VOXModeHigher}" HorizontalAlignment="Left" />
                                            <Label Grid.Column="3" FontSize="10" Content="{x:Static p:Resources.VOXModeLower}" HorizontalAlignment="Right" />
                                        </Grid>

                                    </StackPanel>

                                    <Label Grid.Row="3"
                                           Grid.Column="0"
                                           HorizontalContentAlignment="Center"
                                           VerticalContentAlignment="Center"
                                           Content="{x:Static p:Resources.VOXMinimumRMS}" />

                                    <StackPanel Grid.Row="3"
                                                Grid.Column="1" Margin="10">

                                        <Slider x:Name="VOXMinimumRMS"
                                                TickPlacement="BottomRight"
                                                SmallChange="2"
                                                LargeChange="4"
                                                IsSnapToTickEnabled="True"
                                                TickFrequency="4"
                                                VerticalAlignment="Center"
                                                VerticalContentAlignment="Center"
                                                Maximum="0"
                                                Value="-50"
                                                Minimum="-96"
                                                IsEnabled="False" />
                                        <Grid>
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="*" />
                                                <ColumnDefinition Width="*" />
                                                <ColumnDefinition Width="*" />
                                            </Grid.ColumnDefinitions>
                                            <Label Grid.Column="0" FontSize="10" Content="{x:Static p:Resources.VOXMinimumRMSLower}" HorizontalAlignment="Left" />
                                            <Label Grid.Column="2" FontSize="10" Content="{x:Static p:Resources.VOXMinimumRMSHigher}"
                                                   HorizontalAlignment="Right" />
                                        </Grid>
                                    </StackPanel>

                                </Grid>
                            </GroupBox>

                            <GroupBox Header="{x:Static p:Resources.RecordingHeader}" Visibility="Visible">
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="2*"/>
                                        <ColumnDefinition Width="2*"/>
                                    </Grid.ColumnDefinitions>
                                    <Grid.RowDefinitions>
                                        <RowDefinition />
                                        <RowDefinition />
                                        <RowDefinition />
                                        <RowDefinition />
                                        <RowDefinition />
                                        <RowDefinition />
                                        <RowDefinition />
                                        <RowDefinition />
                                    </Grid.RowDefinitions>
                                    <Label Grid.Row="0"
                                   Grid.Column="0"
                                   HorizontalContentAlignment="Center"
                                   VerticalContentAlignment="Center"
                                   Content="{x:Static p:Resources.AllowTransmissionsRecord}" />

                                    <ToggleButton Name="AllowTransmissionsRecord"
                                          Grid.Row="0"
                                          Grid.Column="1"
                                          HorizontalContentAlignment="Center"
                                          VerticalContentAlignment="Center"
                                          Click="AllowTransmissionsRecord_OnClick"
                                          ToolTipService.ShowOnDisabled="True">
                                        <ToggleButton.Style>
                                            <Style TargetType="{x:Type ToggleButton}">
                                                <Setter Property="Content" Value="{x:Static p:Resources.ValueON}" />
                                                <Style.Triggers>
                                                    <Trigger Property="IsChecked" Value="True">
                                                        <Setter Property="Content" Value="{x:Static p:Resources.ValueON}" />
                                                    </Trigger>
                                                    <Trigger Property="IsChecked" Value="False">
                                                        <Setter Property="Content" Value="{x:Static p:Resources.ValueOFF}" />
                                                    </Trigger>
                                                </Style.Triggers>
                                            </Style>
                                        </ToggleButton.Style>

                                    </ToggleButton>
                                    <Label Grid.Row="1"
                                   Grid.Column="0"
                                   HorizontalContentAlignment="Center"
                                   VerticalContentAlignment="Center"
                                   Content="{x:Static p:Resources.RecordTransmissions}" />

                                    <ToggleButton Name="RecordTransmissions"
                                          Grid.Row="1"
                                          Grid.Column="1"
                                          HorizontalContentAlignment="Center"
                                          VerticalContentAlignment="Center"
                                          Click="RecordTransmissions_OnClick"
                                          ToolTipService.ShowOnDisabled="True">
                                        <ToggleButton.Style>
                                            <Style TargetType="{x:Type ToggleButton}">
                                                <Setter Property="Content" Value="{x:Static p:Resources.ValueON}" />
                                                <Style.Triggers>
                                                    <Trigger Property="IsChecked" Value="True">
                                                        <Setter Property="Content" Value="{x:Static p:Resources.ValueON}" />
                                                    </Trigger>
                                                    <Trigger Property="IsChecked" Value="False">
                                                        <Setter Property="Content" Value="{x:Static p:Resources.ValueOFF}" />
                                                    </Trigger>
                                                </Style.Triggers>
                                            </Style>
                                        </ToggleButton.Style>
                                    </ToggleButton>

                                    <Label Grid.Row="2"
                                   Grid.Column="0"
                                   HorizontalContentAlignment="Center"
                                   VerticalContentAlignment="Center"
                                   Content="{x:Static p:Resources.SingleFileMixdown}" />

                                    <ToggleButton Name="SingleFileMixdown"
                                          Grid.Row="2"
                                          Grid.Column="1"
                                          HorizontalContentAlignment="Center"
                                          VerticalContentAlignment="Center"
                                          Click="SingleFileMixdown_OnClick"
                                          ToolTip="Quality can only be set if Record Transmissions is set to off"
                                          ToolTipService.ShowOnDisabled="True"
                                          >
                                        <ToggleButton.Style>
                                            <Style TargetType="{x:Type ToggleButton}">
                                                <Setter Property="Content" Value="{x:Static p:Resources.ValueON}" />
                                                <Style.Triggers>
                                                    <Trigger Property="IsChecked" Value="True">
                                                        <Setter Property="Content" Value="{x:Static p:Resources.ValueON}" />
                                                    </Trigger>
                                                    <Trigger Property="IsChecked" Value="False">
                                                        <Setter Property="Content" Value="{x:Static p:Resources.ValueOFF}" />
                                                    </Trigger>
                                                </Style.Triggers>
                                            </Style>
                                        </ToggleButton.Style>
                                    </ToggleButton>

                                    <Label Grid.Row="3"
                                   Grid.Column="0"
                                   HorizontalContentAlignment="Center"
                                   VerticalContentAlignment="Center"
                                   Content="{x:Static p:Resources.RecordingQuality}" />
                                    <StackPanel Grid.Row="3"
                                                Grid.Column="1" Margin="10">

                                        <Slider x:Name="RecordingQuality"
                                                TickPlacement="BottomRight"
                                                SmallChange="1"
                                                LargeChange="3"
                                                IsSnapToTickEnabled="True"
                                                TickFrequency="1"
                                                VerticalAlignment="Center"
                                                VerticalContentAlignment="Center"
                                                Maximum="9"
                                                Value="0"
                                                Minimum="0"
                                                IsEnabled="True"
                                                ToolTip="Quality can only be set if Record Transmissions is set to off"
                                                ToolTipService.ShowOnDisabled="True"
                                                />
                                        <Grid>
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="*" />
                                                <ColumnDefinition Width="*" />
                                            </Grid.ColumnDefinitions>
                                            <Label Grid.Column="0" FontSize="10" Content="{x:Static p:Resources.RecordingQuality0}" HorizontalAlignment="Left" />
                                            <Label Grid.Column="1" FontSize="10" Content="{x:Static p:Resources.RecordingQuality9}"
                                                   HorizontalAlignment="Right" />
                                        </Grid>
                                    </StackPanel>

                                    <Label Grid.Row="4"
                                   Grid.Column="0"
                                   HorizontalContentAlignment="Center"
                                   VerticalContentAlignment="Center"
                                   Content="{x:Static p:Resources.DisallowedAudioTone}" />
                                    <ToggleButton Name="DisallowedAudioTone"
                                          Grid.Row="4"
                                          Grid.Column="1"
                                          HorizontalContentAlignment="Center"
                                          VerticalContentAlignment="Center"
                                          Click="DisallowedAudioTone_OnClick"
                                          >
                                        <ToggleButton.Style>
                                            <Style TargetType="{x:Type ToggleButton}">
                                                <Setter Property="Content" Value="{x:Static p:Resources.ValueON}" />
                                                <Style.Triggers>
                                                    <Trigger Property="IsChecked" Value="True">
                                                        <Setter Property="Content" Value="{x:Static p:Resources.ValueON}" />
                                                    </Trigger>
                                                    <Trigger Property="IsChecked" Value="False">
                                                        <Setter Property="Content" Value="{x:Static p:Resources.ValueOFF}" />
                                                    </Trigger>
                                                </Style.Triggers>
                                            </Style>
                                        </ToggleButton.Style>
                                    </ToggleButton>
                                </Grid>
                            </GroupBox>
                            <GroupBox Header="{x:Static p:Resources.MiscellanousHeader}">

                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="2*" />
                                        <ColumnDefinition Width="2*" />

                                    </Grid.ColumnDefinitions>
                                    <Grid.RowDefinitions>
                                        <RowDefinition />
                                        <RowDefinition />
                                        <RowDefinition />
                                        <RowDefinition />
                                        <RowDefinition />
                                        <RowDefinition />
                                        <RowDefinition />
                                        <RowDefinition />
                                        <RowDefinition />
                                        <RowDefinition />
                                        <RowDefinition />
                                        <RowDefinition />
                                        <RowDefinition />
                                        <RowDefinition />
                                        <RowDefinition />
                                        <RowDefinition />
                                        <RowDefinition />
                                        <RowDefinition />
                                        <RowDefinition />
                                        <RowDefinition />
                                        <RowDefinition />
                                        <RowDefinition />
                                        <RowDefinition />
                                        <RowDefinition />
                                        <RowDefinition />
                                        <RowDefinition />
                                        <RowDefinition />
                                        <RowDefinition />
                                        <RowDefinition />
                                        <RowDefinition />
                                        <RowDefinition />
                                        <RowDefinition />
                                        <RowDefinition />
                                        <RowDefinition />
                                        <RowDefinition />
                                        <RowDefinition />
                                        <RowDefinition />
                                        <RowDefinition />
                                    </Grid.RowDefinitions>


                                    <Label Grid.Row="0"
                                   Grid.Column="0"
                                   HorizontalContentAlignment="Center"
                                   VerticalContentAlignment="Center"
                                   Content="{x:Static p:Resources.AutoSelectInputProfile}" />

                                    <ToggleButton Name="AutoSelectInputProfile"
                                          Grid.Row="0"
                                          Grid.Column="1"
                                          HorizontalContentAlignment="Center"
                                          VerticalContentAlignment="Center"
                                          Click="AutoSelectInputProfile_OnClick">
                                        <ToggleButton.Style>
                                            <Style TargetType="{x:Type ToggleButton}">
                                                <Setter Property="Content" Value="{x:Static p:Resources.ValueON}" />
                                                <Style.Triggers>
                                                    <Trigger Property="IsChecked" Value="True">
                                                        <Setter Property="Content" Value="{x:Static p:Resources.ValueON}" />
                                                    </Trigger>
                                                    <Trigger Property="IsChecked" Value="False">
                                                        <Setter Property="Content" Value="{x:Static p:Resources.ValueOFF}" />
                                                    </Trigger>
                                                </Style.Triggers>
                                            </Style>
                                        </ToggleButton.Style>
                                    </ToggleButton>

                                    <Label Grid.Row="1"
                                   Grid.Column="0"
                                   HorizontalContentAlignment="Center"
                                   VerticalContentAlignment="Center"
                                   Content="{x:Static p:Resources.CheckForBetaUpdates}" />

                                    <ToggleButton Name="CheckForBetaUpdates"
                                          Grid.Row="1"
                                          Grid.Column="1"
                                          HorizontalContentAlignment="Center"
                                          VerticalContentAlignment="Center"
                                          Click="CheckForBetaUpdates_OnClick">
                                        <ToggleButton.Style>
                                            <Style TargetType="{x:Type ToggleButton}">
                                                <Setter Property="Content" Value="{x:Static p:Resources.ValueON}" />
                                                <Style.Triggers>
                                                    <Trigger Property="IsChecked" Value="True">
                                                        <Setter Property="Content" Value="{x:Static p:Resources.ValueON}" />
                                                    </Trigger>
                                                    <Trigger Property="IsChecked" Value="False">
                                                        <Setter Property="Content" Value="{x:Static p:Resources.ValueOFF}" />
                                                    </Trigger>
                                                </Style.Triggers>
                                            </Style>
                                        </ToggleButton.Style>
                                    </ToggleButton>



                                    <Label Grid.Row="2"
                                   Grid.Column="0"
                                   HorizontalContentAlignment="Center"
                                   VerticalContentAlignment="Center"
                                   Content="{x:Static p:Resources.SetSRSPath}" />

                                    <Button Grid.Row="2"
                                    Grid.Column="1"
                                    HorizontalContentAlignment="Center"
                                    VerticalContentAlignment="Center"
                                    Click="SetSRSPath_Click"
                                    Content="{x:Static p:Resources.SetSRSPathBtn}" />

                                    <Label Grid.Row="3"
                                   Grid.Column="0"
                                   HorizontalContentAlignment="Center"
                                   VerticalContentAlignment="Center"
                                   Content="{x:Static p:Resources.RequireAdminToggle}" />

                                    <ToggleButton Name="RequireAdminToggle"
                                          Grid.Row="3"
                                          Grid.Column="1"
                                          HorizontalContentAlignment="Center"
                                          VerticalContentAlignment="Center"
                                          Click="RequireAdminToggle_OnClick">
                                        <ToggleButton.Style>
                                            <Style TargetType="{x:Type ToggleButton}">
                                                <Setter Property="Content" Value="{x:Static p:Resources.ValueON}" />
                                                <Style.Triggers>
                                                    <Trigger Property="IsChecked" Value="True">
                                                        <Setter Property="Content" Value="{x:Static p:Resources.ValueON}" />
                                                    </Trigger>
                                                    <Trigger Property="IsChecked" Value="False">
                                                        <Setter Property="Content" Value="{x:Static p:Resources.ValueOFF}" />
                                                    </Trigger>
                                                </Style.Triggers>
                                            </Style>
                                        </ToggleButton.Style>
                                    </ToggleButton>
                                    <Label Grid.Row="4"
                                   Grid.Column="0"
                                   HorizontalContentAlignment="Center"
                                   VerticalContentAlignment="Center"
                                   Content="{x:Static p:Resources.VAICOMTXInhibitEnabled}" />

                                    <ToggleButton Name="VAICOMTXInhibitEnabled"
                                          Grid.Row="4"
                                          Grid.Column="1"
                                          HorizontalContentAlignment="Center"
                                          VerticalContentAlignment="Center"
                                          Click="VAICOMTXInhibit_OnClick">
                                        <ToggleButton.Style>
                                            <Style TargetType="{x:Type ToggleButton}">
                                                <Setter Property="Content" Value="{x:Static p:Resources.ValueON}" />
                                                <Style.Triggers>
                                                    <Trigger Property="IsChecked" Value="True">
                                                        <Setter Property="Content" Value="{x:Static p:Resources.ValueON}" />
                                                    </Trigger>
                                                    <Trigger Property="IsChecked" Value="False">
                                                        <Setter Property="Content" Value="{x:Static p:Resources.ValueOFF}" />
                                                    </Trigger>
                                                </Style.Triggers>
                                            </Style>
                                        </ToggleButton.Style>
                                    </ToggleButton>


                                    <Label Grid.Row="5"
                                   Grid.Column="0"
                                   HorizontalContentAlignment="Center"
                                   VerticalContentAlignment="Center"
                                   Content="{x:Static p:Resources.AllowAnonymousUsage}" />

                                    <ToggleButton Name="AllowAnonymousUsage"
                                          Grid.Row="5"
                                          Grid.Column="1"
                                          HorizontalContentAlignment="Center"
                                          VerticalContentAlignment="Center"
                                          Click="AllowAnonymousUsage_OnClick">
                                        <ToggleButton.Style>
                                            <Style TargetType="{x:Type ToggleButton}">
                                                <Setter Property="Content" Value="{x:Static p:Resources.ValueON}" />
                                                <Style.Triggers>
                                                    <Trigger Property="IsChecked" Value="True">
                                                        <Setter Property="Content" Value="{x:Static p:Resources.ValueON}" />
                                                    </Trigger>
                                                    <Trigger Property="IsChecked" Value="False">
                                                        <Setter Property="Content" Value="{x:Static p:Resources.ValueOFF}" />
                                                    </Trigger>
                                                </Style.Triggers>
                                            </Style>
                                        </ToggleButton.Style>
                                    </ToggleButton>

                                    <Label Grid.Row="6"
                                           Grid.Column="0"
                                           HorizontalContentAlignment="Center"
                                           VerticalContentAlignment="Center"
                                           Content="{x:Static p:Resources.ExpandInputDevices}" />

                                    <ToggleButton Name="ExpandInputDevices"
                                          Grid.Row="6"
                                          Grid.Column="1"
                                          HorizontalContentAlignment="Center"
                                          VerticalContentAlignment="Center"
                                          Click="ExpandInputDevices_OnClick_Click">
                                        <ToggleButton.Style>
                                            <Style TargetType="{x:Type ToggleButton}">
                                                <Setter Property="Content" Value="{x:Static p:Resources.ValueON}" />
                                                <Style.Triggers>
                                                    <Trigger Property="IsChecked" Value="True">
                                                        <Setter Property="Content" Value="{x:Static p:Resources.ValueON}" />
                                                    </Trigger>
                                                    <Trigger Property="IsChecked" Value="False">
                                                        <Setter Property="Content" Value="{x:Static p:Resources.ValueOFF}" />
                                                    </Trigger>
                                                </Style.Triggers>
                                            </Style>
                                        </ToggleButton.Style>
                                    </ToggleButton>

                                    <Label Grid.Row="7"
                                           Grid.Column="0"
                                           HorizontalContentAlignment="Center"
                                           VerticalContentAlignment="Center"
                                           Content="{x:Static p:Resources.AllowXInputController}" />

                                    <ToggleButton Name="AllowXInputController"
                                          Grid.Row="7"
                                          Grid.Column="1"
                                          HorizontalContentAlignment="Center"
                                          VerticalContentAlignment="Center"
                                          Click="AllowXInputController_OnClick_Click">
                                        <ToggleButton.Style>
                                            <Style TargetType="{x:Type ToggleButton}">
                                                <Setter Property="Content" Value="{x:Static p:Resources.ValueON}" />
                                                <Style.Triggers>
                                                    <Trigger Property="IsChecked" Value="True">
                                                        <Setter Property="Content" Value="{x:Static p:Resources.ValueON}" />
                                                    </Trigger>
                                                    <Trigger Property="IsChecked" Value="False">
                                                        <Setter Property="Content" Value="{x:Static p:Resources.ValueOFF}" />
                                                    </Trigger>
                                                </Style.Triggers>
                                            </Style>
                                        </ToggleButton.Style>
                                    </ToggleButton>

                                    <Label Grid.Row="8"
                                           Grid.Column="0"
                                           HorizontalContentAlignment="Center"
                                           VerticalContentAlignment="Center"
                                           Content="{x:Static p:Resources.PlayConnectionSounds}" />

                                    <ToggleButton Name="PlayConnectionSounds"
                                                  Grid.Row="8"
                                                  Grid.Column="1"
                                                  HorizontalContentAlignment="Center"
                                                  VerticalContentAlignment="Center"
                                                  Click="PlayConnectionSounds_OnClick">
                                        <ToggleButton.Style>
                                            <Style TargetType="{x:Type ToggleButton}">
                                                <Setter Property="Content" Value="{x:Static p:Resources.ValueON}" />
                                                <Style.Triggers>
                                                    <Trigger Property="IsChecked" Value="True">
                                                        <Setter Property="Content" Value="{x:Static p:Resources.ValueON}" />
                                                    </Trigger>
                                                    <Trigger Property="IsChecked" Value="False">
                                                        <Setter Property="Content" Value="{x:Static p:Resources.ValueOFF}" />
                                                    </Trigger>
                                                </Style.Triggers>
                                            </Style>
                                        </ToggleButton.Style>
                                    </ToggleButton>
                                </Grid>
                            </GroupBox>

                            <GroupBox Header="{x:Static p:Resources.TemplateHeader}" Visibility="Collapsed">
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="2*" />
                                        <ColumnDefinition Width="2*" />

                                    </Grid.ColumnDefinitions>
                                    <Grid.RowDefinitions>
                                        <RowDefinition />
                                        <RowDefinition />
                                        <RowDefinition />
                                        <RowDefinition />

                                    </Grid.RowDefinitions>
                                </Grid>
                            </GroupBox>
                        </StackPanel>
                    </GroupBox>
                    <GroupBox Header="{x:Static p:Resources.ProfileHeader}">
                        <StackPanel Orientation="Vertical" HorizontalAlignment="Center" Margin="10">
                            <ComboBox x:Name="ControlsProfile"
                                      Width="200"
                                      HorizontalAlignment="Center"
                                      VerticalAlignment="Top" Margin="5" Padding="5" />
                            <StackPanel Orientation="Horizontal" HorizontalAlignment="Center" Margin="10">
                                <Button Margin="5" Padding="5" Content="{x:Static p:Resources.CreateProfile}" Click="CreateProfile" />
                                <Button Margin="5" Padding="5" Content="{x:Static p:Resources.CopyProfile}" Click="CopyProfile" />
                                <Button Margin="5" Padding="5" Content="{x:Static p:Resources.RenameProfile}" Click="RenameProfile" />
                                <Button Margin="5" Padding="5" Content="{x:Static p:Resources.DeleteProfile}" Click="DeleteProfile" />
                            </StackPanel>
                        </StackPanel>
                    </GroupBox>

                    <GroupBox Header="{x:Static p:Resources.ProfileSettingsHeader}">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="2*" />
                                <ColumnDefinition Width="2*" />
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition />
                                <RowDefinition />
                                <RowDefinition />
                                <RowDefinition />
                                <RowDefinition />
                                <RowDefinition />
                                <RowDefinition />
                                <RowDefinition />
                                <RowDefinition />
                                <RowDefinition />
                                <RowDefinition />
                                <RowDefinition />
                                <RowDefinition />
                                <RowDefinition />
                                <RowDefinition />
                                <RowDefinition />
                                <RowDefinition />
                                <RowDefinition />
                                <RowDefinition />
                                <RowDefinition />
                                <RowDefinition />
                                <RowDefinition />
                                <RowDefinition />
                                <RowDefinition />
                                <RowDefinition />
                                <RowDefinition />
                                <RowDefinition />
                                <RowDefinition />
                                <RowDefinition />
                                <RowDefinition />
                                <RowDefinition />
                                <RowDefinition />
                                <RowDefinition />
                                <RowDefinition />
                                <RowDefinition />
                                <RowDefinition />
                                <RowDefinition />
                                <RowDefinition />
                            </Grid.RowDefinitions>

                            <GroupBox Header="{x:Static p:Resources.IntegrationHeader}"
                                      Grid.Row="0"
                                      Grid.Column="0"
                                      Grid.ColumnSpan="2">
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="2*" />
                                        <ColumnDefinition Width="2*" />
                                    </Grid.ColumnDefinitions>
                                    <Grid.RowDefinitions>
                                        <RowDefinition />
                                        <RowDefinition />
                                        <RowDefinition />
                                        <RowDefinition />
                                        <RowDefinition />
                                        <RowDefinition />
                                        <RowDefinition />
                                        <RowDefinition />
                                    </Grid.RowDefinitions>

                                    <Label Grid.Row="0"
                                           Grid.Column="0"
                                           HorizontalContentAlignment="Center"
                                           VerticalContentAlignment="Center"
                                           Content="{x:Static p:Resources.RadioSwitchIsPTT}" />

                                    <ToggleButton Name="RadioSwitchIsPTT"
                                                  Grid.Row="0"
                                                  Grid.Column="1"
                                                  HorizontalContentAlignment="Center"
                                                  VerticalContentAlignment="Center"
                                                  Click="RadioSwitchPTT_Click">
                                        <ToggleButton.Style>
                                            <Style TargetType="{x:Type ToggleButton}">
                                                <Setter Property="Content" Value="{x:Static p:Resources.ValueON}" />
                                                <Style.Triggers>
                                                    <Trigger Property="IsChecked" Value="True">
                                                        <Setter Property="Content" Value="{x:Static p:Resources.ValueON}" />
                                                    </Trigger>
                                                    <Trigger Property="IsChecked" Value="False">
                                                        <Setter Property="Content" Value="{x:Static p:Resources.ValueOFF}" />
                                                    </Trigger>
                                                </Style.Triggers>
                                            </Style>
                                        </ToggleButton.Style>
                                    </ToggleButton>


                                    <Label Grid.Row="1"
                                           Grid.Column="0"
                                           HorizontalContentAlignment="Center"
                                           VerticalContentAlignment="Center"
                                           Content="{x:Static p:Resources.AutoSelectChannel}" />

                                    <ToggleButton Name="AutoSelectChannel"
                                                  Grid.Row="1"
                                                  Grid.Column="1"
                                                  HorizontalContentAlignment="Center"
                                                  VerticalContentAlignment="Center"
                                                  Click="AudioSelectChannel_OnClick">
                                        <ToggleButton.Style>
                                            <Style TargetType="{x:Type ToggleButton}">
                                                <Setter Property="Content" Value="{x:Static p:Resources.ValueON}" />
                                                <Style.Triggers>
                                                    <Trigger Property="IsChecked" Value="True">
                                                        <Setter Property="Content" Value="{x:Static p:Resources.ValueON}" />
                                                    </Trigger>
                                                    <Trigger Property="IsChecked" Value="False">
                                                        <Setter Property="Content" Value="{x:Static p:Resources.ValueOFF}" />
                                                    </Trigger>
                                                </Style.Triggers>
                                            </Style>
                                        </ToggleButton.Style>
                                    </ToggleButton>

                                    <Label Grid.Row="2"
                                           Grid.Column="0"
                                           HorizontalContentAlignment="Center"
                                           VerticalContentAlignment="Center"
                                           Content="{x:Static p:Resources.AlwaysAllowHotas}" />

                                    <ToggleButton Name="AlwaysAllowHotas"
                                                  Grid.Row="2"
                                                  Grid.Column="1"
                                                  HorizontalContentAlignment="Center"
                                                  VerticalContentAlignment="Center"
                                                  Click="AlwaysAllowHotas_OnClick">
                                        <ToggleButton.Style>
                                            <Style TargetType="{x:Type ToggleButton}">
                                                <Setter Property="Content" Value="{x:Static p:Resources.ValueON}" />
                                                <Style.Triggers>
                                                    <Trigger Property="IsChecked" Value="True">
                                                        <Setter Property="Content" Value="{x:Static p:Resources.ValueON}" />
                                                    </Trigger>
                                                    <Trigger Property="IsChecked" Value="False">
                                                        <Setter Property="Content" Value="{x:Static p:Resources.ValueOFF}" />
                                                    </Trigger>
                                                </Style.Triggers>
                                            </Style>
                                        </ToggleButton.Style>
                                    </ToggleButton>

                                    <Label Grid.Row="3"
                                           Grid.Column="0"
                                           HorizontalContentAlignment="Center"
                                           VerticalContentAlignment="Center"
                                           Content="{x:Static p:Resources.AlwaysAllowTransponderOverlay}" />

                                    <ToggleButton Name="AlwaysAllowTransponderOverlay"
                                                  Grid.Row="3"
                                                  Grid.Column="1"
                                                  HorizontalContentAlignment="Center"
                                                  VerticalContentAlignment="Center"
                                                  Click="AlwaysAllowTransponderOverlay_OnClick">
                                        <ToggleButton.Style>
                                            <Style TargetType="{x:Type ToggleButton}">
                                                <Setter Property="Content" Value="{x:Static p:Resources.ValueON}" />
                                                <Style.Triggers>
                                                    <Trigger Property="IsChecked" Value="True">
                                                        <Setter Property="Content" Value="{x:Static p:Resources.ValueON}" />
                                                    </Trigger>
                                                    <Trigger Property="IsChecked" Value="False">
                                                        <Setter Property="Content" Value="{x:Static p:Resources.ValueOFF}" />
                                                    </Trigger>
                                                </Style.Triggers>
                                            </Style>
                                        </ToggleButton.Style>
                                    </ToggleButton>

                                    <Label Grid.Row="4"
                                           Grid.Column="0"
                                           HorizontalContentAlignment="Center"
                                           VerticalContentAlignment="Center"
                                           Content="{x:Static p:Resources.AllowDCSPTT}" />

                                    <ToggleButton Name="AllowDCSPTT"
                                                  Grid.Row="4"
                                                  Grid.Column="1"
                                                  HorizontalContentAlignment="Center"
                                                  VerticalContentAlignment="Center"
                                                  Click="AllowDCSPTT_OnClick">
                                        <ToggleButton.Style>
                                            <Style TargetType="{x:Type ToggleButton}">
                                                <Setter Property="Content" Value="{x:Static p:Resources.ValueON}" />
                                                <Style.Triggers>
                                                    <Trigger Property="IsChecked" Value="True">
                                                        <Setter Property="Content" Value="{x:Static p:Resources.ValueON}" />
                                                    </Trigger>
                                                    <Trigger Property="IsChecked" Value="False">
                                                        <Setter Property="Content" Value="{x:Static p:Resources.ValueOFF}" />
                                                    </Trigger>
                                                </Style.Triggers>
                                            </Style>
                                        </ToggleButton.Style>
                                    </ToggleButton>

                                    <Label Grid.Row="5"
                                           Grid.Column="0"
                                           HorizontalContentAlignment="Center"
                                           VerticalContentAlignment="Center"
                                           Content="{x:Static p:Resources.AllowRotaryIncrement}" />

                                    <ToggleButton Name="AllowRotaryIncrement"
                                                  Grid.Row="5"
                                                  Grid.Column="1"
                                                  HorizontalContentAlignment="Center"
                                                  VerticalContentAlignment="Center"
                                                  Click="AllowRotaryIncrement_OnClick">
                                        <ToggleButton.Style>
                                            <Style TargetType="{x:Type ToggleButton}">
                                                <Setter Property="Content" Value="{x:Static p:Resources.ValueOFF}" />
                                                <Style.Triggers>
                                                    <Trigger Property="IsChecked" Value="True">
                                                        <Setter Property="Content" Value="{x:Static p:Resources.ValueON}" />
                                                    </Trigger>
                                                    <Trigger Property="IsChecked" Value="False">
                                                        <Setter Property="Content" Value="{x:Static p:Resources.ValueOFF}" />
                                                    </Trigger>
                                                </Style.Triggers>
                                            </Style>
                                        </ToggleButton.Style>
                                    </ToggleButton>

                                    <Label Grid.Row="6"
                                           Grid.Column="0"
                                           HorizontalContentAlignment="Center"
                                           VerticalContentAlignment="Center"
                                           Content="{x:Static p:Resources.PTTReleaseDelay}" />

                                    <StackPanel Grid.Row="6"
                                                Grid.Column="1" Margin="10">

                                        <Slider x:Name="PTTReleaseDelay"
                                                TickPlacement="BottomRight"
                                                SmallChange="20"
                                                LargeChange="50"
                                                IsSnapToTickEnabled="True"
                                                TickFrequency="50"
                                                VerticalAlignment="Center"
                                                VerticalContentAlignment="Center"
                                                Maximum="1000"
                                                Value="0"
                                                Minimum="0"
                                                IsEnabled="False" />
                                        <Grid>
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="*" />
                                                <ColumnDefinition Width="*" />
                                                <ColumnDefinition Width="*" />
                                            </Grid.ColumnDefinitions>
                                            <Label Grid.Column="0" FontSize="10" Content="{x:Static p:Resources.PTTReleaseDelay0}" HorizontalAlignment="Left" />
                                            <Label Grid.Column="1" FontSize="10" Content="{x:Static p:Resources.PTTReleaseDelay500}"
                                                   HorizontalAlignment="Center" />
                                            <Label Grid.Column="2" FontSize="10" Content="{x:Static p:Resources.PTTReleaseDelay1000}"
                                                   HorizontalAlignment="Right" />
                                        </Grid>

                                    </StackPanel>

                                    <Label Grid.Row="7"
                                           Grid.Column="0"
                                           HorizontalContentAlignment="Center"
                                           VerticalContentAlignment="Center"
                                           Content="{x:Static p:Resources.PTTStartDelay}" />

                                    <StackPanel Grid.Row="7"
                                                Grid.Column="1" Margin="10">

                                        <Slider x:Name="PTTStartDelay"
                                                TickPlacement="BottomRight"
                                                SmallChange="20"
                                                LargeChange="50"
                                                IsSnapToTickEnabled="True"
                                                TickFrequency="50"
                                                VerticalAlignment="Center"
                                                VerticalContentAlignment="Center"
                                                Maximum="1000"
                                                Value="0"
                                                Minimum="0"
                                                IsEnabled="False" />
                                        <Grid>
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="*" />
                                                <ColumnDefinition Width="*" />
                                                <ColumnDefinition Width="*" />
                                            </Grid.ColumnDefinitions>
                                            <Label Grid.Column="0" FontSize="10" Content="{x:Static p:Resources.PTTStartDelay0}" HorizontalAlignment="Left" />
                                            <Label Grid.Column="1" FontSize="10" Content="{x:Static p:Resources.PTTStartDelay500}"
                                                   HorizontalAlignment="Center" />
                                            <Label Grid.Column="2" FontSize="10" Content="{x:Static p:Resources.PTTStartDelay1000}"
                                                   HorizontalAlignment="Right" />
                                        </Grid>

                                    </StackPanel>
                                </Grid>
                            </GroupBox>

                            <GroupBox Header="{x:Static p:Resources.RadioEffectHeader}"
                                      Grid.Row="1"
                                      Grid.Column="0"
                                      Grid.ColumnSpan="2">
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="2*" />
                                        <ColumnDefinition Width="2*" />
                                    </Grid.ColumnDefinitions>
                                    <Grid.RowDefinitions>
                                        <RowDefinition />
                                        <RowDefinition />
                                        <RowDefinition />
                                        <RowDefinition />
                                        <RowDefinition />
                                        <RowDefinition />
                                        <RowDefinition />
                                        <RowDefinition />
                                        <RowDefinition />
                                        <RowDefinition />
                                        <RowDefinition />
                                        <RowDefinition />
                                        <RowDefinition />
                                        <RowDefinition />
                                        <RowDefinition />
                                        <RowDefinition />
                                        <RowDefinition />
                                        <RowDefinition />
                                        <RowDefinition />
                                    </Grid.RowDefinitions>


                                    <Label Grid.Row="0"
                                           Grid.Column="0"
                                           HorizontalContentAlignment="Center"
                                           VerticalContentAlignment="Center"
                                           Content="{x:Static p:Resources.RadioRxEffects}" />

                                    <WrapPanel Grid.Row="0"
                                               Grid.Column="1"
                                               HorizontalAlignment="Center"
                                               VerticalAlignment="Center"
                                               Orientation="Horizontal">
										<Label Content="{x:Static p:Resources.RadioRxStart}" />

                                        <ToggleButton Name="RadioRxStartToggle"
                                                      HorizontalContentAlignment="Center"
                                                      VerticalContentAlignment="Center"
                                                      Click="RadioRxStart_Click">
                                            <ToggleButton.Style>
                                                <Style TargetType="{x:Type ToggleButton}">
                                                    <Setter Property="Content" Value="{x:Static p:Resources.ValueON}" />
                                                    <Style.Triggers>
                                                        <Trigger Property="IsChecked" Value="True">
                                                            <Setter Property="Content" Value="{x:Static p:Resources.ValueON}" />
                                                        </Trigger>
                                                        <Trigger Property="IsChecked" Value="False">
                                                            <Setter Property="Content" Value="{x:Static p:Resources.ValueOFF}" />
                                                        </Trigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </ToggleButton.Style>
                                        </ToggleButton>
                                        <Label Content="{x:Static p:Resources.RadioRxEnd}" />
                                        <ToggleButton Name="RadioRxEndToggle"
                                                      HorizontalContentAlignment="Center"
                                                      VerticalContentAlignment="Center"
                                                      Click="RadioRxEnd_Click">
                                            <ToggleButton.Style>
                                                <Style TargetType="{x:Type ToggleButton}">
                                                    <Setter Property="Content" Value="{x:Static p:Resources.ValueON}" />
                                                    <Style.Triggers>
                                                        <Trigger Property="IsChecked" Value="True">
                                                            <Setter Property="Content" Value="{x:Static p:Resources.ValueON}" />
                                                        </Trigger>
                                                        <Trigger Property="IsChecked" Value="False">
                                                            <Setter Property="Content" Value="{x:Static p:Resources.ValueOFF}" />
                                                        </Trigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </ToggleButton.Style>
                                        </ToggleButton>
                                    </WrapPanel>


                                    <Label Grid.Row="1"
                                           Grid.Column="0"

                                           HorizontalContentAlignment="Center"
                                           VerticalContentAlignment="Center"
                                           Content="{x:Static p:Resources.RadioTxEffects}" />

                                    <WrapPanel Grid.Row="1"
                                               Grid.Column="1"
                                               HorizontalAlignment="Center"
                                               VerticalAlignment="Center"
                                               Orientation="Vertical">
                                        <WrapPanel Orientation="Horizontal">
											<Label Content="{x:Static p:Resources.RadioTxStart}" />

                                            <ToggleButton Name="RadioTxStartToggle"
                                                          HorizontalContentAlignment="Center"
                                                          VerticalContentAlignment="Center"
                                                          Click="RadioTxStart_Click">
                                                <ToggleButton.Style>
                                                    <Style TargetType="{x:Type ToggleButton}">
                                                        <Setter Property="Content" Value="{x:Static p:Resources.ValueON}" />
                                                        <Style.Triggers>
                                                            <Trigger Property="IsChecked" Value="True">
                                                                <Setter Property="Content" Value="{x:Static p:Resources.ValueON}" />
                                                            </Trigger>
                                                            <Trigger Property="IsChecked" Value="False">
                                                                <Setter Property="Content" Value="{x:Static p:Resources.ValueOFF}" />
                                                            </Trigger>
                                                        </Style.Triggers>
                                                    </Style>
                                                </ToggleButton.Style>
                                            </ToggleButton>
                                            <Label Content="{x:Static p:Resources.RadioTxEnd}" />
                                            <ToggleButton Name="RadioTxEndToggle"
                                                          HorizontalContentAlignment="Center"
                                                          VerticalContentAlignment="Center"
                                                          Click="RadioTxEnd_Click">
                                                <ToggleButton.Style>
                                                    <Style TargetType="{x:Type ToggleButton}">
                                                        <Setter Property="Content" Value="{x:Static p:Resources.ValueON}" />
                                                        <Style.Triggers>
                                                            <Trigger Property="IsChecked" Value="True">
                                                                <Setter Property="Content" Value="{x:Static p:Resources.ValueON}" />
                                                            </Trigger>
                                                            <Trigger Property="IsChecked" Value="False">
                                                                <Setter Property="Content" Value="{x:Static p:Resources.ValueOFF}" />
                                                            </Trigger>
                                                        </Style.Triggers>
                                                    </Style>
                                                </ToggleButton.Style>
                                            </ToggleButton>
                                        </WrapPanel>

                                    </WrapPanel>

                                    <Label Grid.Row="2"
                                           Grid.Column="0"
                                           HorizontalContentAlignment="Center"
                                           VerticalContentAlignment="Center"
                                           Content="{x:Static p:Resources.RadioStartTransmitEffect}" />

                                    <ComboBox x:Name="RadioStartTransmitEffect"
                                              Grid.Row="2"
                                              Grid.Column="1"
                                              Width="215"
                                              HorizontalAlignment="Center"
                                              VerticalAlignment="Top" />

                                    <Label Grid.Row="3"
                                           Grid.Column="0"
                                           HorizontalContentAlignment="Center"
                                           VerticalContentAlignment="Center"
                                           Content="{x:Static p:Resources.RadioEndTransmitEffect}" />

                                    <ComboBox x:Name="RadioEndTransmitEffect"
                                              Grid.Row="3"
                                              Grid.Column="1"
                                              Width="215"
                                              HorizontalAlignment="Center"
                                              VerticalAlignment="Top" />

                                    <Label Grid.Row="4"
                                           Grid.Column="0"
                                           HorizontalContentAlignment="Center"
                                           VerticalContentAlignment="Center"
                                           Content="{x:Static p:Resources.IntercomStartTransmitEffect}" />

                                    <ComboBox x:Name="IntercomStartTransmitEffect"
                                              Grid.Row="4"
                                              Grid.Column="1"
                                              Width="215"
                                              HorizontalAlignment="Center"
                                              VerticalAlignment="Top" />

                                    <Label Grid.Row="5"
                                           Grid.Column="0"
                                           HorizontalContentAlignment="Center"
                                           VerticalContentAlignment="Center"
                                           Content="{x:Static p:Resources.IntercomEndTransmitEffect}" />

                                    <ComboBox x:Name="IntercomEndTransmitEffect"
                                              Grid.Row="5"
                                              Grid.Column="1"
                                              Width="215"
                                              HorizontalAlignment="Center"
                                              VerticalAlignment="Top" />

                                    <Label Grid.Row="6"
                                           Grid.Column="0"
                                           HorizontalContentAlignment="Center"
                                           VerticalContentAlignment="Center"
                                           Content="{x:Static p:Resources.RadioEncryptionEffectsToggle}" />

                                    <ToggleButton Name="RadioEncryptionEffectsToggle"
                                                  Grid.Row="6"
                                                  Grid.Column="1"
                                                  HorizontalContentAlignment="Center"
                                                  VerticalContentAlignment="Center"
                                                  Click="RadioEncryptionEffects_Click">
                                        <ToggleButton.Style>
                                            <Style TargetType="{x:Type ToggleButton}">
                                                <Setter Property="Content" Value="{x:Static p:Resources.ValueON}" />
                                                <Style.Triggers>
                                                    <Trigger Property="IsChecked" Value="True">
                                                        <Setter Property="Content" Value="{x:Static p:Resources.ValueON}" />
                                                    </Trigger>
                                                    <Trigger Property="IsChecked" Value="False">
                                                        <Setter Property="Content" Value="{x:Static p:Resources.ValueOFF}" />
                                                    </Trigger>
                                                </Style.Triggers>
                                            </Style>
                                        </ToggleButton.Style>
                                    </ToggleButton>

                                    <Label Grid.Row="7"
                                           Grid.Column="0"
                                           HorizontalContentAlignment="Center"
                                           VerticalContentAlignment="Center"
                                           Content="{x:Static p:Resources.RadioMIDSToggle}" />

                                    <ToggleButton Name="RadioMIDSToggle"
                                                  Grid.Row="7"
                                                  Grid.Column="1"
                                                  HorizontalContentAlignment="Center"
                                                  VerticalContentAlignment="Center"
                                                  Click="RadioMIDS_Click">
                                        <ToggleButton.Style>
                                            <Style TargetType="{x:Type ToggleButton}">
                                                <Setter Property="Content" Value="{x:Static p:Resources.ValueON}" />
                                                <Style.Triggers>
                                                    <Trigger Property="IsChecked" Value="True">
                                                        <Setter Property="Content" Value="{x:Static p:Resources.ValueON}" />
                                                    </Trigger>
                                                    <Trigger Property="IsChecked" Value="False">
                                                        <Setter Property="Content" Value="{x:Static p:Resources.ValueOFF}" />
                                                    </Trigger>
                                                </Style.Triggers>
                                            </Style>
                                        </ToggleButton.Style>
                                    </ToggleButton>

                                    <Label Grid.Row="8"
                                           Grid.Column="0"
                                           HorizontalContentAlignment="Center"
                                           VerticalContentAlignment="Center"
                                           Content="{x:Static p:Resources.RadioSoundEffects}" />

                                    <ToggleButton Name="RadioSoundEffects"
                                                  Grid.Row="8"
                                                  Grid.Column="1"
                                                  HorizontalContentAlignment="Center"
                                                  VerticalContentAlignment="Center"
                                                  Click="RadioSoundEffects_OnClick">
                                        <ToggleButton.Style>
                                            <Style TargetType="{x:Type ToggleButton}">
                                                <Setter Property="Content" Value="{x:Static p:Resources.ValueON}" />
                                                <Style.Triggers>
                                                    <Trigger Property="IsChecked" Value="True">
                                                        <Setter Property="Content" Value="{x:Static p:Resources.ValueON}" />
                                                    </Trigger>
                                                    <Trigger Property="IsChecked" Value="False">
                                                        <Setter Property="Content" Value="{x:Static p:Resources.ValueOFF}" />
                                                    </Trigger>
                                                </Style.Triggers>
                                            </Style>
                                        </ToggleButton.Style>
                                    </ToggleButton>



                                    <Label Grid.Row="9"
                                           Grid.Column="0"
                                           HorizontalContentAlignment="Center"
                                           VerticalContentAlignment="Center"
                                           Content="{x:Static p:Resources.RadioSoundEffectsClipping}" />

                                    <ToggleButton Name="RadioSoundEffectsClipping"
                                                  Grid.Row="9"
                                                  Grid.Column="1"
                                                  HorizontalContentAlignment="Center"
                                                  VerticalContentAlignment="Center"
                                                  Click="RadioSoundEffectsClipping_OnClick">
                                        <ToggleButton.Style>
                                            <Style TargetType="{x:Type ToggleButton}">
                                                <Setter Property="Content" Value="{x:Static p:Resources.ValueON}" />
                                                <Style.Triggers>
                                                    <Trigger Property="IsChecked" Value="True">
                                                        <Setter Property="Content" Value="{x:Static p:Resources.ValueON}" />
                                                    </Trigger>
                                                    <Trigger Property="IsChecked" Value="False">
                                                        <Setter Property="Content" Value="{x:Static p:Resources.ValueOFF}" />
                                                    </Trigger>
                                                </Style.Triggers>
                                            </Style>
                                        </ToggleButton.Style>
                                    </ToggleButton>


                                    <Label Grid.Row="10"
                                           Grid.Column="0"
                                           HorizontalContentAlignment="Center"
                                           VerticalContentAlignment="Center"
                                           Content="{x:Static p:Resources.NATORadioTone}" />

                                    <StackPanel Grid.Row="10"
                                                Grid.Column="1" Margin="10">

                                        <ToggleButton Name="NATORadioToneToggle"
                                                      HorizontalContentAlignment="Center"
                                                      VerticalContentAlignment="Center"
                                                      Click="NATORadioTone_Click">
                                            <ToggleButton.Style>
                                                <Style TargetType="{x:Type ToggleButton}">
                                                    <Setter Property="Content" Value="{x:Static p:Resources.ValueON}" />
                                                    <Style.Triggers>
                                                        <Trigger Property="IsChecked" Value="True">
                                                            <Setter Property="Content" Value="{x:Static p:Resources.ValueON}" />
                                                        </Trigger>
                                                        <Trigger Property="IsChecked" Value="False">
                                                            <Setter Property="Content" Value="{x:Static p:Resources.ValueOFF}" />
                                                        </Trigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </ToggleButton.Style>
                                        </ToggleButton>

                                        <Slider x:Name="NATOToneVolume"
                                                TickPlacement="BottomRight"
                                                SmallChange="5"
                                                LargeChange="10"
                                                IsSnapToTickEnabled="True"
                                                TickFrequency="10"
                                                VerticalAlignment="Center"
                                                VerticalContentAlignment="Center"
                                                Maximum="200"
                                                Value="100"
                                                Minimum="0"
                                                IsEnabled="False" />
                                        <Grid>
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="*" />
                                                <ColumnDefinition Width="*" />
                                                <ColumnDefinition Width="*" />
                                            </Grid.ColumnDefinitions>
                                            <Label Grid.Column="0" FontSize="10" Content="{x:Static p:Resources.EffectVolume0}" HorizontalAlignment="Left" />
                                            <Label Grid.Column="1" FontSize="10" Content="{x:Static p:Resources.EffectVolume100}"
                                                   HorizontalAlignment="Center" />
                                            <Label Grid.Column="2" FontSize="10" Content="{x:Static p:Resources.EffectVolume200}"
                                                   HorizontalAlignment="Right" />
                                        </Grid>

                                    </StackPanel>

                                    <Label Grid.Row="11"
                                           Grid.Column="0"
                                           HorizontalContentAlignment="Center"
                                           VerticalContentAlignment="Center"
                                           Content="{x:Static p:Resources.HQEffect}" />

                                    <StackPanel Grid.Row="11"
                                                Grid.Column="1" Margin="10">

                                        <ToggleButton Name="HQEffectToggle"
                                                      HorizontalContentAlignment="Center"
                                                      VerticalContentAlignment="Center"
                                                      Click="HQEffect_Click">
                                            <ToggleButton.Style>
                                                <Style TargetType="{x:Type ToggleButton}">
                                                    <Setter Property="Content" Value="{x:Static p:Resources.ValueON}" />
                                                    <Style.Triggers>
                                                        <Trigger Property="IsChecked" Value="True">
                                                            <Setter Property="Content" Value="{x:Static p:Resources.ValueON}" />
                                                        </Trigger>
                                                        <Trigger Property="IsChecked" Value="False">
                                                            <Setter Property="Content" Value="{x:Static p:Resources.ValueOFF}" />
                                                        </Trigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </ToggleButton.Style>
                                        </ToggleButton>

                                        <Slider x:Name="HQToneVolume"
                                                TickPlacement="BottomRight"
                                                SmallChange="5"
                                                LargeChange="10"
                                                IsSnapToTickEnabled="True"
                                                TickFrequency="10"
                                                VerticalAlignment="Center"
                                                VerticalContentAlignment="Center"
                                                Maximum="200"
                                                Value="100"
                                                Minimum="0"
                                                IsEnabled="False" />
                                        <Grid>
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="*" />
                                                <ColumnDefinition Width="*" />
                                                <ColumnDefinition Width="*" />
                                            </Grid.ColumnDefinitions>
                                            <Label Grid.Column="0" FontSize="10" Content="{x:Static p:Resources.EffectVolume0}" HorizontalAlignment="Left" />
                                            <Label Grid.Column="1" FontSize="10" Content="{x:Static p:Resources.EffectVolume100}"
                                                   HorizontalAlignment="Center" />
                                            <Label Grid.Column="2" FontSize="10" Content="{x:Static p:Resources.EffectVolume200}"
                                                   HorizontalAlignment="Right" />
                                        </Grid>

                                    </StackPanel>

                                    <Label Grid.Row="12"
                                           Grid.Column="0"
                                           HorizontalContentAlignment="Center"
                                           VerticalContentAlignment="Center"
                                           Content="{x:Static p:Resources.BackgroundRadioNoise}" />

                                    <ToggleButton Name="BackgroundRadioNoiseToggle"
                                                  Grid.Row="12"
                                                  Grid.Column="1"
                                                  HorizontalContentAlignment="Center"
                                                  VerticalContentAlignment="Center"
                                                  Click="BackgroundRadioNoiseToggle_OnClick">
                                        <ToggleButton.Style>
                                            <Style TargetType="{x:Type ToggleButton}">
                                                <Setter Property="Content" Value="{x:Static p:Resources.ValueON}" />
                                                <Style.Triggers>
                                                    <Trigger Property="IsChecked" Value="True">
                                                        <Setter Property="Content" Value="{x:Static p:Resources.ValueON}" />
                                                    </Trigger>
                                                    <Trigger Property="IsChecked" Value="False">
                                                        <Setter Property="Content" Value="{x:Static p:Resources.ValueOFF}" />
                                                    </Trigger>
                                                </Style.Triggers>
                                            </Style>
                                        </ToggleButton.Style>
                                    </ToggleButton>

                                    <Label Grid.Row="13"
                                           Grid.Column="0"
                                           HorizontalContentAlignment="Center"
                                           VerticalContentAlignment="Center"
                                           Content="{x:Static p:Resources.UHFEffectVolume}" />

                                    <StackPanel Grid.Row="13"
                                                Grid.Column="1" Margin="10">

                                        <Slider x:Name="UHFEffectVolume"
                                                TickPlacement="BottomRight"
                                                SmallChange="5"
                                                LargeChange="10"
                                                IsSnapToTickEnabled="True"
                                                TickFrequency="10"
                                                VerticalAlignment="Center"
                                                VerticalContentAlignment="Center"
                                                Maximum="200"
                                                Value="100"
                                                Minimum="0"
                                                IsEnabled="False" />
                                        <Grid>
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="*" />
                                                <ColumnDefinition Width="*" />
                                                <ColumnDefinition Width="*" />
                                            </Grid.ColumnDefinitions>
                                            <Label Grid.Column="0" FontSize="10" Content="{x:Static p:Resources.EffectVolume0}" HorizontalAlignment="Left" />
                                            <Label Grid.Column="1" FontSize="10" Content="{x:Static p:Resources.EffectVolume100}"
                                                   HorizontalAlignment="Center" />
                                            <Label Grid.Column="2" FontSize="10" Content="{x:Static p:Resources.EffectVolume200}"
                                                   HorizontalAlignment="Right" />
                                        </Grid>

                                    </StackPanel>

                                    <Label Grid.Row="14"
                                           Grid.Column="0"
                                           HorizontalContentAlignment="Center"
                                           VerticalContentAlignment="Center"
                                           Content="{x:Static p:Resources.VHFEffectVolume}" />

                                    <StackPanel Grid.Row="14"
                                                Grid.Column="1" Margin="10">

                                        <Slider x:Name="VHFEffectVolume"
                                                TickPlacement="BottomRight"
                                                SmallChange="5"
                                                LargeChange="10"
                                                IsSnapToTickEnabled="True"
                                                TickFrequency="10"
                                                VerticalAlignment="Center"
                                                VerticalContentAlignment="Center"
                                                Maximum="200"
                                                Value="100"
                                                Minimum="0"
                                                IsEnabled="False" />
                                        <Grid>
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="*" />
                                                <ColumnDefinition Width="*" />
                                                <ColumnDefinition Width="*" />
                                            </Grid.ColumnDefinitions>
                                            <Label Grid.Column="0" FontSize="10" Content="{x:Static p:Resources.EffectVolume0}" HorizontalAlignment="Left" />
                                            <Label Grid.Column="1" FontSize="10" Content="{x:Static p:Resources.EffectVolume100}"
                                                   HorizontalAlignment="Center" />
                                            <Label Grid.Column="2" FontSize="10" Content="{x:Static p:Resources.EffectVolume200}"
                                                   HorizontalAlignment="Right" />
                                        </Grid>

                                    </StackPanel>

                                    <Label Grid.Row="15"
                                           Grid.Column="0"
                                           HorizontalContentAlignment="Center"
                                           VerticalContentAlignment="Center"
                                           Content="{x:Static p:Resources.HFEffectVolume}" />

                                    <StackPanel Grid.Row="15"
                                                Grid.Column="1" Margin="10">

                                        <Slider x:Name="HFEffectVolume"
                                                TickPlacement="BottomRight"
                                                SmallChange="5"
                                                LargeChange="10"
                                                IsSnapToTickEnabled="True"
                                                TickFrequency="10"
                                                VerticalAlignment="Center"
                                                VerticalContentAlignment="Center"
                                                Maximum="200"
                                                Value="100"
                                                Minimum="0"
                                                IsEnabled="False" />
                                        <Grid>
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="*" />
                                                <ColumnDefinition Width="*" />
                                                <ColumnDefinition Width="*" />
                                            </Grid.ColumnDefinitions>
                                            <Label Grid.Column="0" FontSize="10" Content="{x:Static p:Resources.EffectVolume0}" HorizontalAlignment="Left" />
                                            <Label Grid.Column="1" FontSize="10" Content="{x:Static p:Resources.EffectVolume100}"
                                                   HorizontalAlignment="Center" />
                                            <Label Grid.Column="2" FontSize="10" Content="{x:Static p:Resources.EffectVolume200}"
                                                   HorizontalAlignment="Right" />
                                        </Grid>

                                    </StackPanel>

                                    <Label Grid.Row="16"
                                           Grid.Column="0"
                                           HorizontalContentAlignment="Center"
                                           VerticalContentAlignment="Center"
                                           Content="{x:Static p:Resources.FMEffectVolume}" />

                                    <StackPanel Grid.Row="16"
                                                Grid.Column="1" Margin="10">

                                        <Slider x:Name="FMEffectVolume"
                                                TickPlacement="BottomRight"
                                                SmallChange="5"
                                                LargeChange="10"
                                                IsSnapToTickEnabled="True"
                                                TickFrequency="10"
                                                VerticalAlignment="Center"
                                                VerticalContentAlignment="Center"
                                                Maximum="200"
                                                Value="100"
                                                Minimum="0"
                                                IsEnabled="False" />
                                        <Grid>
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="*" />
                                                <ColumnDefinition Width="*" />
                                                <ColumnDefinition Width="*" />
                                            </Grid.ColumnDefinitions>
                                            <Label Grid.Column="0" FontSize="10" Content="{x:Static p:Resources.EffectVolume0}" HorizontalAlignment="Left" />
                                            <Label Grid.Column="1" FontSize="10" Content="{x:Static p:Resources.EffectVolume100}"
                                                   HorizontalAlignment="Center" />
                                            <Label Grid.Column="2" FontSize="10" Content="{x:Static p:Resources.EffectVolume200}"
                                                   HorizontalAlignment="Right" />
                                        </Grid>

                                    </StackPanel>

                                    <Label Grid.Row="17"
                                           Grid.Column="0"
                                           HorizontalContentAlignment="Center"
                                           VerticalContentAlignment="Center"
                                           Content="{x:Static p:Resources.AmbientEffectToggle}" />

                                    <ToggleButton Name="AmbientCockpitEffectToggle"
                                                  Grid.Row="17"
                                                  Grid.Column="1"
                                                  HorizontalContentAlignment="Center"
                                                  VerticalContentAlignment="Center"
                                                  Click="AmbientCockpitEffectToggle_OnClick">
                                        <ToggleButton.Style>
                                            <Style TargetType="{x:Type ToggleButton}">
                                                <Setter Property="Content" Value="{x:Static p:Resources.ValueON}" />
                                                <Style.Triggers>
                                                    <Trigger Property="IsChecked" Value="True">
                                                        <Setter Property="Content" Value="{x:Static p:Resources.ValueON}" />
                                                    </Trigger>
                                                    <Trigger Property="IsChecked" Value="False">
                                                        <Setter Property="Content" Value="{x:Static p:Resources.ValueOFF}" />
                                                    </Trigger>
                                                </Style.Triggers>
                                            </Style>
                                        </ToggleButton.Style>
                                    </ToggleButton>


                                    <Label Grid.Row="18"
                                               Grid.Column="0"
                                               HorizontalContentAlignment="Center"
                                               VerticalContentAlignment="Center"
                                               Content="{x:Static p:Resources.AmbientEffectVolume}" />

                                        <StackPanel Grid.Row="18"
                                                    Grid.Column="1" Margin="10">

                                            <Slider x:Name="AmbientCockpitEffectVolume"
                                                    TickPlacement="BottomRight"
                                                    SmallChange="5"
                                                    LargeChange="10"
                                                    IsSnapToTickEnabled="True"
                                                    TickFrequency="10"
                                                    VerticalAlignment="Center"
                                                    VerticalContentAlignment="Center"
                                                    Maximum="200"
                                                    Value="100"
                                                    Minimum="0"
                                                    IsEnabled="False" />
                                            <Grid>
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition Width="*" />
                                                    <ColumnDefinition Width="*" />
                                                    <ColumnDefinition Width="*" />
                                                </Grid.ColumnDefinitions>
                                                <Label Grid.Column="0" FontSize="10" Content="{x:Static p:Resources.EffectVolume0}" HorizontalAlignment="Left" />
                                                <Label Grid.Column="1" FontSize="10" Content="{x:Static p:Resources.EffectVolume100}"
                                                       HorizontalAlignment="Center" />
                                                <Label Grid.Column="2" FontSize="10" Content="{x:Static p:Resources.EffectVolume200}"
                                                       HorizontalAlignment="Right" />
                                            </Grid>

                                        </StackPanel>

                                </Grid>
                            </GroupBox>


                            <GroupBox Header="{x:Static p:Resources.AudioHeader}"
                                      Grid.Row="2"
                                      Grid.Column="0"
                                      Grid.ColumnSpan="2">
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="2*" />
                                        <ColumnDefinition Width="2*" />
                                    </Grid.ColumnDefinitions>
                                    <Grid.RowDefinitions>
                                        <RowDefinition />
                                        <RowDefinition />
                                        <RowDefinition />
                                        <RowDefinition />
                                        <RowDefinition />
                                        <RowDefinition />
                                        <RowDefinition />
                                        <RowDefinition />
                                        <RowDefinition />
                                        <RowDefinition />
                                        <RowDefinition />
                                        <RowDefinition />
                                        <RowDefinition />
                                        <RowDefinition />
                                        <RowDefinition />
                                        <RowDefinition />
                                    </Grid.RowDefinitions>


                                    <Label Grid.Row="0"
                                           Grid.Column="0"
                                           HorizontalContentAlignment="Center"
                                           VerticalContentAlignment="Center"
                                           Content="{x:Static p:Resources.Radio1Config}" />
                                    <local:RadioChannelConfigUi x:Name="Radio1Config"
                                                                Grid.Row="0"
                                                                Grid.Column="1"
                                                                ProfileSettingKey="{x:Static settings:ProfileSettingsKeys.Radio1Channel}" />

                                    <Label Grid.Row="1"
                                           Grid.Column="0"
                                           HorizontalContentAlignment="Center"
                                           VerticalContentAlignment="Center"
                                           Content="{x:Static p:Resources.Radio2Config}" />
                                    <local:RadioChannelConfigUi x:Name="Radio2Config"
                                                                Grid.Row="1"
                                                                Grid.Column="1"
                                                                ProfileSettingKey="{x:Static settings:ProfileSettingsKeys.Radio2Channel}" />

                                    <Label Grid.Row="2"
                                           Grid.Column="0"
                                           HorizontalContentAlignment="Center"
                                           VerticalContentAlignment="Center"
                                           Content="{x:Static p:Resources.Radio3Config}" />
                                    <local:RadioChannelConfigUi x:Name="Radio3Config"
                                                                Grid.Row="2"
                                                                Grid.Column="1"
                                                                ProfileSettingKey="{x:Static settings:ProfileSettingsKeys.Radio3Channel}" />
                                    <Label Grid.Row="3"
                                           Grid.Column="0"
                                           HorizontalContentAlignment="Center"
                                           VerticalContentAlignment="Center"
                                           Content="{x:Static p:Resources.Radio4Config}" />
                                    <local:RadioChannelConfigUi x:Name="Radio4Config"
                                                                Grid.Row="3"
                                                                Grid.Column="1"
                                                                ProfileSettingKey="{x:Static settings:ProfileSettingsKeys.Radio4Channel}" />
                                    <Label Grid.Row="4"
                                           Grid.Column="0"
                                           HorizontalContentAlignment="Center"
                                           VerticalContentAlignment="Center"
                                           Content="{x:Static p:Resources.Radio5Config}" />
                                    <local:RadioChannelConfigUi x:Name="Radio5Config"
                                                                Grid.Row="4"
                                                                Grid.Column="1"
                                                                ProfileSettingKey="{x:Static settings:ProfileSettingsKeys.Radio5Channel}" />
                                    <Label Grid.Row="5"
                                           Grid.Column="0"
                                           HorizontalContentAlignment="Center"
                                           VerticalContentAlignment="Center"
                                           Content="{x:Static p:Resources.Radio6Config}" />
                                    <local:RadioChannelConfigUi x:Name="Radio6Config"
                                                                Grid.Row="5"
                                                                Grid.Column="1"
                                                                ProfileSettingKey="{x:Static settings:ProfileSettingsKeys.Radio6Channel}" />
                                    <Label Grid.Row="6"
                                           Grid.Column="0"
                                           HorizontalContentAlignment="Center"
                                           VerticalContentAlignment="Center"
                                           Content="{x:Static p:Resources.Radio7Config}" />
                                    <local:RadioChannelConfigUi x:Name="Radio7Config"
                                                                Grid.Row="6"
                                                                Grid.Column="1"
                                                                ProfileSettingKey="{x:Static settings:ProfileSettingsKeys.Radio7Channel}" />
                                    <Label Grid.Row="7"
                                           Grid.Column="0"
                                           HorizontalContentAlignment="Center"
                                           VerticalContentAlignment="Center"
                                           Content="{x:Static p:Resources.Radio8Config}" />
                                    <local:RadioChannelConfigUi x:Name="Radio8Config"
                                                                Grid.Row="7"
                                                                Grid.Column="1"
                                                                ProfileSettingKey="{x:Static settings:ProfileSettingsKeys.Radio8Channel}" />
                                    <Label Grid.Row="8"
                                           Grid.Column="0"
                                           HorizontalContentAlignment="Center"
                                           VerticalContentAlignment="Center"
                                           Content="{x:Static p:Resources.Radio9Config}" />
                                    <local:RadioChannelConfigUi x:Name="Radio9Config"
                                                                Grid.Row="8"
                                                                Grid.Column="1"
                                                                ProfileSettingKey="{x:Static settings:ProfileSettingsKeys.Radio9Channel}" />
                                    <Label Grid.Row="9"
                                           Grid.Column="0"
                                           HorizontalContentAlignment="Center"
                                           VerticalContentAlignment="Center"
                                           Content="{x:Static p:Resources.Radio10Config}" />
                                    <local:RadioChannelConfigUi x:Name="Radio10Config"
                                                                Grid.Row="9"
                                                                Grid.Column="1"
                                                                ProfileSettingKey="{x:Static settings:ProfileSettingsKeys.Radio10Channel}" />

                                    <Label Grid.Row="10"
                                           Grid.Column="0"
                                           HorizontalContentAlignment="Center"
                                           VerticalContentAlignment="Center"
                                           Content="{x:Static p:Resources.IntercomConfig}" />
                                    <local:RadioChannelConfigUi x:Name="IntercomConfig"
                                                                Grid.Row="10"
                                                                Grid.Column="1"
                                                                ProfileSettingKey="{x:Static settings:ProfileSettingsKeys.IntercomChannel}" />
                                </Grid>
                            </GroupBox>
                        </Grid>
                    </GroupBox>

                </StackPanel>
            </ScrollViewer>
        </TabItem>

        <TabItem Header="{x:Static p:Resources.HelpTab}">
            <GroupBox Header="{x:Static p:Resources.HelpHeader}">
                <FlowDocumentScrollViewer>
                    <FlowDocument Name="AboutFlowDocument">

                        <Paragraph>
							<Run FontSize="14" Text="{x:Static p:Resources.HelpLocalizationNotes}" />
                            <Run FontSize="16" FontWeight="Bold" Text="{x:Static p:Resources.HelpP1}"></Run>
                        </Paragraph>
                        <Paragraph FontSize="14">
							<Run Text="{x:Static p:Resources.HelpP1L1}" />
                            <Run FontSize="16" FontWeight="Bold" Text="{x:Static p:Resources.HelpP1L2}"></Run>
							<Run Text="{x:Static p:Resources.HelpP1L3}" />                            
                        </Paragraph>

                        <Paragraph>
                            <Run FontSize="16" FontWeight="Bold" Text="{x:Static p:Resources.HelpP2}"></Run>
                        </Paragraph>

                        <Paragraph FontSize="14">
                            <Run FontSize="14" FontWeight="Bold" Text="{x:Static p:Resources.HelpP2L1}"></Run>
							<Run Text="{x:Static p:Resources.HelpP2L2}" />                            
                        </Paragraph>

                        <Paragraph FontSize="14">
							<Run Text="{x:Static p:Resources.HelpP2L3}" />
                        </Paragraph>

                        <Paragraph>
                            <Run FontSize="16" FontWeight="Bold" Text="{x:Static p:Resources.HelpP3}"></Run>
                        </Paragraph>

                        <Paragraph FontSize="14">
							<Run Text="{x:Static p:Resources.HelpP3L1}" />
                            <Hyperlink NavigateUri="https://discord.gg/baw7g3t"><Run Text="{x:Static p:Resources.HelpP3L2}" /></Hyperlink>
							<Run Text="{x:Static p:Resources.HelpP3L3}" />                            
                        </Paragraph>

                        <Paragraph>
							<Run FontSize="16" FontWeight="Bold" Text="{x:Static p:Resources.HelpP4}"></Run>
                        </Paragraph>
                        <Paragraph FontSize="14">
							<Run Text="{x:Static p:Resources.HelpP4L1}" />							
							<LineBreak />
                            <LineBreak />
							<Run Text="{x:Static p:Resources.HelpP4L2}" />
							<Hyperlink NavigateUri="https://discord.gg/baw7g3t">
								<Run Text="{x:Static p:Resources.HelpP4L3}" />
							</Hyperlink>
							<Run Text="{x:Static p:Resources.HelpP4L4}" />
                        </Paragraph>


                        <Paragraph>
                            <Run FontSize="16" FontWeight="Bold" Text="{x:Static p:Resources.HelpP5}"></Run>
                        </Paragraph>
                        <Paragraph FontSize="14">
							<Run Text="{x:Static p:Resources.HelpP5L1}" />
							<Run Text="{x:Static p:Resources.HelpP5L2}" />
							<Run Text="{x:Static p:Resources.HelpP5L3}" />
                            <LineBreak />
                            <LineBreak />

                            <Hyperlink
                                NavigateUri="https://docs.google.com/spreadsheets/d/1tzd996zJ1t0heZ-t1PpL7vNUIZbXl7pI6De0GThN1Qw/edit#gid=1869108790">
                                <Run Text="{x:Static p:Resources.HelpP5L4}" />
                            </Hyperlink>
							<Run Text="{x:Static p:Resources.HelpP5L5}" />
                            
                            <LineBreak />
                            <LineBreak />
							<Run Text="{x:Static p:Resources.HelpP5L6}" />
							<Run Text="{x:Static p:Resources.HelpP5L7}" />
                            <Hyperlink NavigateUri="https://github.com/ciribob/DCS-SimpleRadioStandalone/releases">
								<Run Text="{x:Static p:Resources.HelpP5L8}" />
							</Hyperlink>

                        </Paragraph>

                        <Paragraph>
                            <Run FontSize="16" FontWeight="Bold" Text="{x:Static p:Resources.HelpP6}"></Run>
                        </Paragraph>
                        <Paragraph FontSize="14">
							<Run Text="{x:Static p:Resources.HelpP6L1}" />                            
                            <Hyperlink
                                NavigateUri="https://github.com/ciribob/DCS-SimpleRadioStandalone/releases/latest">
								<Run Text="{x:Static p:Resources.HelpP6L2}" />                                
                            </Hyperlink>
                            <LineBreak />
                            <LineBreak />
							<Run Text="{x:Static p:Resources.HelpP6L3}" />                            
                            <Hyperlink NavigateUri="https://github.com/ciribob/DCS-SimpleRadioStandalone/releases">
								<Run Text="{x:Static p:Resources.HelpP6L4}" />
							</Hyperlink>

                        </Paragraph>

                    </FlowDocument>
                </FlowDocumentScrollViewer>
            </GroupBox>
        </TabItem>

    </TabControl>
</controls:MetroWindow>